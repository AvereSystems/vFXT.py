FlashMirror Overview

Like FlashMove, FlashMirror also copies the contents of a filesystem
from one core filer to another. However, after the initial copying is
finished, FlashMirror keeps the primary and secondary filesystems
synchronized with each other as clients make changes.

Clients continue to access their files through the cluster, and any
changes are written to both the original location and the mirror
location.


This diagram shows an Avere cluster with the back-end file path
"<Vendor A>/src" defined as the junction "/src" in the client-facing
namespace. (Read

Using a Global Namespace

 in the Avere OS Configuration Guide for more information.)

The cluster has an active FlashMirror job that copies the data stored
in "<Vendor A>/src" to "<Vendor C>/src". As clients change the data
from the cluster, both locations are updated and kept synchronized.

If the primary storage system becomes unavailable, you can

transition

 the mirror, which changes the namespace junction to point to the
secondary filesystem. This transition is seamless for clients. The
mirror also can be reversed - for example, if you need to take the
primary system out of service for maintenance, you can change the
secondary system to be the primary system and allow the mirror to go
out of sync until the other volume is back in service. When the other
system comes back online, changes are automatically synchronized to
that volume again, since it is now the secondary in the mirror system.
You have the option to continue the mirror with the current
primary/secondary setup, or reverse the mirror again if you prefer to
have the original source volume be the primary.

Leveraging FlashMirror

Like FlashMove, FlashMirror is invisible to the applications using the
data. It can be useful for situations like these:

Keeping a second copy of important data for disaster recovery

Distributing data that is needed at multiple geographic sites
