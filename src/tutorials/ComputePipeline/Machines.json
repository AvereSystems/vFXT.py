{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userIdentity": {
      "type": "object",
      "metadata": {
        "description": "The managed user identity."
      }
    },
    "imageGallery": {
      "type": "object",
      "metadata": {
        "description": "The shared image gallery."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "The virtual network to join."
      }
    },
    "virtualMachines": {
      "type": "array",
      "metadata": {
        "description": "The virtual machines."
      }
    },
    "virtualMachineSets": {
      "type": "array",
      "metadata": {
        "description": "The virtual machine scale sets."
      }
    },
    "customExtension": {
      "type": "object",
      "metadata": {
        "description": "The custom extension scripts."
      }
    }
  },
  "variables": {
    "virtualNetworkApiVersion": "2020-06-01",
    "virtualMachineApiVersion": "2020-06-01"
  },
  "functions": [
    {
      "namespace": "script",
      "members": {
        "GetExecuteCommand": {
          "parameters": [
            {
              "name": "scriptCommands",
              "type": "string"
            },
            {
              "name": "scriptParameters",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[if(equals(parameters('scriptParameters'), ''), format('PowerShell.exe -ExecutionPolicy Unrestricted -EncodedCommand {0}', parameters('scriptCommands')), format('echo -n {0} | base64 -d | tr -d \r | {1} /bin/bash', parameters('scriptCommands'), parameters('scriptParameters')))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "condition": "[parameters('virtualMachines')[copyIndex()].enabled]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('virtualMachines')[copyIndex()].name]",
      "apiVersion": "[variables('virtualNetworkApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "networkInterfaces",
        "count": "[length(parameters('virtualMachines'))]"
      }
    },
    {
      "condition": "[parameters('virtualMachines')[copyIndex()].enabled]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines')[copyIndex()].name]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('virtualMachines')[copyIndex()].name)]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId(parameters('userIdentity').resourceGroupName, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentity').name)]": {
          }
        }
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines')[copyIndex()].size]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('virtualMachines')[copyIndex()].name)]"
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images/versions', parameters('imageGallery').name, parameters('virtualMachines')[copyIndex()].image.definitionName, parameters('virtualMachines')[copyIndex()].image.versionId)]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines')[copyIndex()].name]",
          "adminUsername": "[parameters('virtualMachines')[copyIndex()].login.adminUsername]",
          "adminPassword": "[parameters('virtualMachines')[copyIndex()].login.adminPassword]"
        }
      },
      "resources": [
        {
          "condition": "[and(parameters('virtualMachines')[copyIndex()].enabled, greater(length(parameters('virtualMachines')[copyIndex()].extensions), 0))]",
          "type": "extensions",
          "name": "[if(greater(length(parameters('virtualMachines')[copyIndex()].extensions), 0), parameters('virtualMachines')[copyIndex()].extensions[0].name, 'ex0')]",
          "apiVersion": "[variables('virtualMachineApiVersion')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines')[copyIndex()].name)]"
          ],
          "properties": {
            "publisher": "[parameters('virtualMachines')[copyIndex()].extensions[0].publisher]",
            "type": "[parameters('virtualMachines')[copyIndex()].extensions[0].type]",
            "typeHandlerVersion": "[parameters('virtualMachines')[copyIndex()].extensions[0].version]",
            "autoUpgradeMinorVersion": "[parameters('virtualMachines')[copyIndex()].extensions[0].autoUpgrade]",
            "protectedSettings": "[if(equals(parameters('virtualMachines')[copyIndex()].extensions[0].type, 'CustomScript'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').linux.scriptCommands, parameters('customExtension').linux.scriptParameters), '\"}')), if(equals(parameters('virtualMachines')[copyIndex()].extensions[0].type, 'CustomScriptExtension'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').windows.scriptCommands, parameters('customExtension').windows.scriptParameters), '\"}')), json('null')))]"
          }
        },
        {
          "condition": "[and(parameters('virtualMachines')[copyIndex()].enabled, greater(length(parameters('virtualMachines')[copyIndex()].extensions), 1))]",
          "type": "extensions",
          "name": "[if(greater(length(parameters('virtualMachines')[copyIndex()].extensions), 1), parameters('virtualMachines')[copyIndex()].extensions[1].name, 'ex1')]",
          "apiVersion": "[variables('virtualMachineApiVersion')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines')[copyIndex()].name)]",
            "[if(greater(length(parameters('virtualMachines')[copyIndex()].extensions), 1), resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('virtualMachines')[copyIndex()].name, parameters('virtualMachines')[copyIndex()].extensions[0].name), resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines')[copyIndex()].name))]"
          ],
          "properties": {
            "publisher": "[parameters('virtualMachines')[copyIndex()].extensions[1].publisher]",
            "type": "[parameters('virtualMachines')[copyIndex()].extensions[1].type]",
            "typeHandlerVersion": "[parameters('virtualMachines')[copyIndex()].extensions[1].version]",
            "autoUpgradeMinorVersion": "[parameters('virtualMachines')[copyIndex()].extensions[1].autoUpgrade]",
            "protectedSettings": "[if(equals(parameters('virtualMachines')[copyIndex()].extensions[1].type, 'CustomScript'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').linux.scriptCommands, parameters('customExtension').linux.scriptParameters), '\"}')), if(equals(parameters('virtualMachines')[copyIndex()].extensions[1].type, 'CustomScriptExtension'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').windows.scriptCommands, parameters('customExtension').windows.scriptParameters), '\"}')), json('null')))]"
          }
        }
      ],
      "copy": {
        "name": "virtualMachines",
        "count": "[length(parameters('virtualMachines'))]"
      }
    },
    {
      "condition": "[parameters('virtualMachineSets')[copyIndex()].enabled]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('virtualMachineSets')[copyIndex()].name]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('virtualMachineSets')[copyIndex()].size]",
        "capacity": "[parameters('virtualMachineSets')[copyIndex()].count]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId(parameters('userIdentity').resourceGroupName, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentity').name)]": {
          }
        }
      },
      "properties": {
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "networkInterface",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "[resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images/versions', parameters('imageGallery').name, parameters('virtualMachineSets')[copyIndex()].image.definitionName, parameters('virtualMachineSets')[copyIndex()].image.versionId)]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('virtualMachineSets')[copyIndex()].name]",
            "adminUsername": "[parameters('virtualMachineSets')[copyIndex()].login.adminUsername]",
            "adminPassword": "[parameters('virtualMachineSets')[copyIndex()].login.adminPassword]"
          }
        },
        "upgradePolicy": {
          "mode": "Automatic"
        }
      },
      "copy": {
        "name": "virtualMachineSets",
        "count": "[length(parameters('virtualMachineSets'))]"
      }
    },
    {
      "condition": "[and(parameters('virtualMachineSets')[copyIndex()].enabled, greater(length(parameters('virtualMachineSets')[copyIndex()].extensions), 0))]",
      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
      "name": "[concat(parameters('virtualMachineSets')[copyIndex()].name, '/', if(greater(length(parameters('virtualMachineSets')[copyIndex()].extensions), 0), parameters('virtualMachineSets')[copyIndex()].extensions[0].name, 'ex0'))]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineSets')[copyIndex()].name)]"
      ],
      "properties": {
        "publisher": "[parameters('virtualMachineSets')[copyIndex()].extensions[0].publisher]",
        "type": "[parameters('virtualMachineSets')[copyIndex()].extensions[0].type]",
        "typeHandlerVersion": "[parameters('virtualMachineSets')[copyIndex()].extensions[0].version]",
        "autoUpgradeMinorVersion": "[parameters('virtualMachineSets')[copyIndex()].extensions[0].autoUpgrade]",
        "protectedSettings": "[if(equals(parameters('virtualMachineSets')[copyIndex()].extensions[0].type, 'CustomScript'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').linux.scriptCommands, parameters('customExtension').linux.scriptParameters), '\"}')), if(equals(parameters('virtualMachineSets')[copyIndex()].extensions[0].type, 'CustomScriptExtension'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').windows.scriptCommands, parameters('customExtension').windows.scriptParameters), '\"}')), json('null')))]"
      },
      "copy": {
        "name": "virtualMachineSets",
        "count": "[length(parameters('virtualMachineSets'))]"
      }
    },
    {
      "condition": "[and(parameters('virtualMachineSets')[copyIndex()].enabled, greater(length(parameters('virtualMachineSets')[copyIndex()].extensions), 1))]",
      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
      "name": "[concat(parameters('virtualMachineSets')[copyIndex()].name, '/', if(greater(length(parameters('virtualMachineSets')[copyIndex()].extensions), 1), parameters('virtualMachineSets')[copyIndex()].extensions[1].name, 'ex1'))]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineSets')[copyIndex()].name)]",
        "[if(greater(length(parameters('virtualMachineSets')[copyIndex()].extensions), 1), resourceId('Microsoft.Compute/virtualMachineScaleSets/extensions', parameters('virtualMachineSets')[copyIndex()].name, parameters('virtualMachineSets')[copyIndex()].extensions[0].name), resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineSets')[copyIndex()].name))]"
      ],
      "properties": {
        "publisher": "[parameters('virtualMachineSets')[copyIndex()].extensions[1].publisher]",
        "type": "[parameters('virtualMachineSets')[copyIndex()].extensions[1].type]",
        "typeHandlerVersion": "[parameters('virtualMachineSets')[copyIndex()].extensions[1].version]",
        "autoUpgradeMinorVersion": "[parameters('virtualMachineSets')[copyIndex()].extensions[1].autoUpgrade]",
        "protectedSettings": "[if(equals(parameters('virtualMachineSets')[copyIndex()].extensions[1].type, 'CustomScript'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').linux.scriptCommands, parameters('customExtension').linux.scriptParameters), '\"}')), if(equals(parameters('virtualMachineSets')[copyIndex()].extensions[1].type, 'CustomScriptExtension'), json(concat('{\"commandToExecute\": \"', script.GetExecuteCommand(parameters('customExtension').windows.scriptCommands, parameters('customExtension').windows.scriptParameters), '\"}')), json('null')))]"
        },
      "copy": {
        "name": "virtualMachineSets",
        "count": "[length(parameters('virtualMachineSets'))]"
      }
    }
  ],
  "outputs": {
  }
}
