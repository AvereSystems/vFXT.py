{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "managedIdentity": {
      "type": "object"
    },
    "imageGallery": {
      "type": "object"
    },
    "renderManagers": {
      "type": "array"
    },
    "customExtension": {
      "type": "object"
    },
    "logAnalytics": {
      "type": "object"
    },
    "virtualNetwork": {
      "type": "object"
    }
  },
  "variables": {
    "imageGalleryApiVersion": "2020-09-30",
    "virtualNetworkApiVersion": "2020-11-01",
    "virtualMachineApiVersion": "2020-12-01",
    "networkInterfaceApiVersion": "2020-11-01"
  },
  "functions": [
    {
      "namespace": "fx",
      "members": {
        "GetLinuxConfig": {
          "parameters": [
            {
              "name": "sshPublicKeyData",
              "type": "string"
            },
            {
              "name": "adminUserName",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[if(equals(parameters('sshPublicKeyData'), ''), 'null', concat('{\"ssh\": {\"publicKeys\": [{\"path\": \"/home/', parameters('adminUsername'), '/.ssh/authorized_keys\", \"keyData\": \"', parameters('sshPublicKeyData'), '\"}]}}'))]"
          }
        },
        "GetExtensionCommand": {
          "parameters": [
            {
              "name": "scriptFilePath",
              "type": "string"
            },
            {
              "name": "scriptParameters",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[if(endsWith(parameters('scriptFilePath'), '.ps1'), format('PowerShell.exe -ExecutionPolicy Unrestricted -File {0} {1}', parameters('scriptFilePath'), parameters('scriptParameters')), format('cat {0} | tr -d \r | {1} /bin/bash', parameters('scriptFilePath'), parameters('scriptParameters')))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('renderManagers')[copyIndex()].name]",
      "apiVersion": "[variables('networkInterfaceApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "renderManagers",
        "count": "[length(parameters('renderManagers'))]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('renderManagers')[copyIndex()].name]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('renderManagers')[copyIndex()].name)]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId(parameters('managedIdentity').resourceGroupName, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity').name)]": {
          }
        }
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('renderManagers')[copyIndex()].machine.size]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('renderManagers')[copyIndex()].name)]"
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images/versions', parameters('imageGallery').name, parameters('renderManagers')[copyIndex()].image.definitionName, parameters('renderManagers')[copyIndex()].image.versionId)]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "osProfile": {
          "computerName": "[parameters('renderManagers')[copyIndex()].name]",
          "adminUsername": "[parameters('renderManagers')[copyIndex()].machine.adminUsername]",
          "adminPassword": "[parameters('renderManagers')[copyIndex()].machine.adminPassword]",
          "linuxConfiguration": "[json(fx.GetLinuxConfig(parameters('renderManagers')[copyIndex()].machine.sshPublicKeyData, parameters('renderManagers')[copyIndex()].machine.adminUsername))]"
        }
      },
      "copy": {
        "mode": "Serial",
        "name": "renderManagers",
        "count": "[length(parameters('renderManagers'))]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('renderManagers')[copyIndex()].name, '/extension')]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('renderManagers')[copyIndex()].name)]"
      ],
      "properties": {
        "publisher": "[if(equals(reference(resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images', parameters('imageGallery').name, parameters('renderManagers')[copyIndex()].image.definitionName), variables('imageGalleryApiVersion')).osType, 'Windows'), 'Microsoft.Compute', 'Microsoft.Azure.Extensions')]",
        "type": "[if(equals(reference(resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images', parameters('imageGallery').name, parameters('renderManagers')[copyIndex()].image.definitionName), variables('imageGalleryApiVersion')).osType, 'Windows'), 'CustomScriptExtension', 'CustomScript')]",
        "typeHandlerVersion": "[if(equals(reference(resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images', parameters('imageGallery').name, parameters('renderManagers')[copyIndex()].image.definitionName), variables('imageGalleryApiVersion')).osType, 'Windows'), '1.10', '2.1')]",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[if(equals(reference(resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images', parameters('imageGallery').name, parameters('renderManagers')[copyIndex()].image.definitionName), variables('imageGalleryApiVersion')).osType, 'Windows'), fx.GetExtensionCommand(parameters('customExtension').windows.scriptFilePath, parameters('customExtension').windows.scriptParameters), fx.GetExtensionCommand(parameters('customExtension').linux.scriptFilePath, parameters('customExtension').linux.scriptParameters))]"
        }
      },
      "copy": {
        "mode": "Serial",
        "name": "renderManagers",
        "count": "[length(parameters('renderManagers'))]"
      }
    },
    {
      "condition": "[parameters('logAnalytics').deploy]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('renderManagers')[copyIndex()].name, '/monitor')]",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('renderManagers')[copyIndex()].name)]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "OmsAgentForLinux",
        "typeHandlerVersion": "1.13",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "workspaceKey": "[parameters('logAnalytics').workspaceKey]"
        },
        "settings": {
          "workspaceId": "[parameters('logAnalytics').workspaceId]"
        }
      },
      "copy": {
        "mode": "Serial",
        "name": "renderManagers",
        "count": "[length(parameters('renderManagers'))]"
      }
    }
  ],
  "outputs": {
    "renderManager": {
      "type": "object",
      "value": {
        "host": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('renderManagers')[0].name), variables('virtualNetworkApiVersion')).ipConfigurations[0].properties.privateIPAddress]"
      }
    }
  }
}
