{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userIdentity": {
      "type": "object",
      "metadata": {
        "description": "The managed user identity."
      }
    },
    "logAnalytics": {
      "type": "object",
      "metadata": {
        "description": "The monitor log analytics."
      }
    },
    "automationAccount": {
      "type": "object",
      "metadata": {
        "description": "The automation account."
      }
    },
    "keyVault": {
      "type": "object",
      "metadata": {
        "description": "The key vault."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "The virtual network."
      }
    }
  },
  "variables": {
    "virtualNetworkApiVersion": "2020-05-01",
    "managedIdentityApiVersion": "2018-11-30",
    "operationalInsightsApiVersion": "2020-03-01-preview",
    "diagnosticSettingsApiVersion": "2017-05-01-preview",
    "automationApiVersion": "2020-01-13-preview",
    "keyVaultApiVersion": "2019-09-01"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[parameters('userIdentity').name]",
      "apiVersion": "[variables('managedIdentityApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('logAnalytics').name]",
      "apiVersion": "[variables('operationalInsightsApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "[parameters('logAnalytics').tier]"
        },
        "retentionInDays": "[parameters('logAnalytics').dataRetentionDays]",
        "publicNetworkAccessForIngestion": "[parameters('logAnalytics').networkAccessPublicIngest]",
        "publicNetworkAccessForQuery": "[parameters('logAnalytics').networkAccessPublicQuery]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
      "name": "[concat(parameters('logAnalytics').name, '/automation')]",
      "apiVersion": "[variables('operationalInsightsApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalytics').name)]",
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccount').name)]"
      ],
      "properties": {
        "resourceId": "[resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccount').name)]"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccount').name]",
      "apiVersion": "[variables('automationApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "[parameters('automationAccount').tier]"
        }
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
      "name": "[concat(parameters('automationAccount').name, '/Microsoft.Insights/', parameters('logAnalytics').name)]",
      "apiVersion": "[variables('diagnosticSettingsApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccount').name)]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalytics').name)]"
      ],
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalytics').name)]",
        "logs": [
          {
            "category": "JobLogs",
            "enabled": true
          },
          {
            "category": "JobStreams",
            "enabled": true
          },
          {
            "category": "DscNodeStatus",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVault').name]",
      "apiVersion": "[variables('keyVaultApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('keyVault').name)]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('keyVault').tier]",
          "family": "A"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": "true",
        "enabledForDiskEncryption": "true",
        "enabledForTemplateDeployment": "true",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('keyVault').adminId]",
            "permissions": {
              "keys": [
                "All"
              ],
              "secrets": [
                "All"
              ],
              "certificates": [
                "All"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('keyVault').name), variables('managedIdentityApiVersion')).principalId]",
            "permissions": {
              "secrets": [
                "Get"
              ]
            }
          }
        ],
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "name": "[parameters('keyVault').name]",
      "apiVersion": "[variables('virtualNetworkApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name)]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('keyVault').name]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name)]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "userIdentity": {
      "type": "object",
      "value": "[parameters('userIdentity')]"
    },
    "logAnalytics": {
      "type": "object",
      "value": {
        "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalytics').name), variables('operationalInsightsApiVersion')).customerId]",
        "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalytics').name), variables('operationalInsightsApiVersion')).primarySharedKey]"
      }
    },
    "keyVault": {
      "type": "object",
      "value": {
        "uri": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name), variables('keyVaultApiVersion')).vaultUri]"
      }
    }
  }
}
