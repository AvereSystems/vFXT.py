{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccount": {
      "type": "object",
      "metadata": {
        "description": "The Azure Blob storage account."
      }
    },
    "storageContainers": {
      "type": "array",
      "metadata": {
        "description": "The storage object containers."
      }
    },
    "storageTargets": {
      "type": "array",
      "metadata": {
        "description": "The storage cache targets."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "The virtual network subnet."
      }
    }
  },
  "variables": {
    "virtualNetworkApiVersion": "2020-03-01",
    "storageApiVersion": "2019-06-01",
    "storageAccountName": "[toLower(parameters('storageAccount').name)]",
    "storageAccountNetworked": "[not(equals(parameters('storageAccount').subnetName, ''))]",
    "storageCachePrincipalId": "831d4223-7a3c-4121-a445-1e423591e57b",
    "storageContributorRoleIds": [
      "17d1049b-9a84-46fb-8f53-869881c3d3ab",
      "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
    ],
    "roleAssignmentApiVersion": "2019-04-01-preview"
  },
  "resources": [
    {
      "condition": "[variables('storageAccountNetworked')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetwork').name]",
      "apiVersion": "[variables('virtualNetworkApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetwork').addressSpace]"
          ]
        },
        "copy": [
          {
            "name": "subnets",
            "count": "[length(parameters('virtualNetwork').subnets)]",
            "input": {
              "name": "[parameters('virtualNetwork').subnets[copyIndex('subnets')].name]",
              "properties": {
                "addressPrefix": "[parameters('virtualNetwork').subnets[copyIndex('subnets')].addressSpace]",
                "serviceEndpoints": "[parameters('virtualNetwork').subnets[copyIndex('subnets')].serviceEndpoints]",
                "delegations": "[parameters('virtualNetwork').subnets[copyIndex('subnets')].delegations]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork').name)]"
      ],
      "kind": "[parameters('storageAccount').type]",
      "sku": {
        "name": "[parameters('storageAccount').replication]"
      },
      "properties": {
        "networkAcls": "[if(variables('storageAccountNetworked'), json(concat('{\"bypass\": \"None\", \"defaultAction\": \"Deny\", \"virtualNetworkRules\": [{\"action\": \"Allow\", \"id\": \"', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('storageAccount').subnetName), '\"}]}')), json('null'))]",
        "supportsHttpsTrafficOnly": true
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "name": "[concat(variables('storageAccountName'), '/default/', parameters('storageContainers')[copyIndex()].name)]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      },
      "copy": {
        "name": "storageContainers",
        "count": "[length(parameters('storageContainers'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(variables('storageContributorRoleIds')[copyIndex()]))]",
      "apiVersion": "[variables('roleAssignmentApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "principalId": "[variables('storageCachePrincipalId')]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageContributorRoleIds')[copyIndex()])]"
      },
      "copy": {
        "name": "storageContributorRoleIds",
        "count": "[length(variables('storageContributorRoleIds'))]"
      }
    }
  ],
  "outputs": {
    "virtualNetworkName": {
      "type": "string",
      "value": "[if(variables('storageAccountNetworked'), parameters('virtualNetwork').name, '')]"
    },
    "storageTargets": {
      "type": "array",
      "copy": {
        "count": "[length(parameters('storageTargets'))]",
        "input": {
          "name": "[if(variables('storageAccountNetworked'), concat(parameters('virtualNetwork').name, '-Object-', parameters('storageTargets')[copyIndex()].name), concat('Object-', parameters('storageTargets')[copyIndex()].name))]",
          "type": "[parameters('storageTargets')[copyIndex()].type]",
          "host": "[split(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, '/')[2]]",
          "target": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', toLower(parameters('storageTargets')[copyIndex()].name))]",
          "junctions": "[parameters('storageTargets')[copyIndex()].junctions]",
          "mountOptions": "[parameters('storageTargets')[copyIndex()].mountOptions]"
        }
      }
    }
  }
}
