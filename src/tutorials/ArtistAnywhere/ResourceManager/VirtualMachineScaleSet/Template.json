{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "managedImage": {
      "type": "object"
    },
    "imageGallery": {
      "type": "object"
    },
    "virtualMachine": {
      "type": "object"
    },
    "virtualNetwork": {
      "type": "object"
    },
    "joinDomain": {
      "type": "object"
    }
  },
  "variables": {
    "vmScaleSetApiVersion": "2020-12-01"
  },
  "functions": [
  ],
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('virtualMachine').scaleSetName]",
      "apiVersion": "[variables('vmScaleSetApiVersion')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('virtualMachine').instanceSize]",
        "capacity": "[parameters('virtualMachine').instanceCount]"
      },
      "properties": {
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "networkInterface",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "[if(not(equals(parameters('managedImage').name, '')), resourceId(parameters('managedImage').resourceGroupName, 'Microsoft.Compute/images', parameters('managedImage').name), resourceId(parameters('imageGallery').resourceGroupName, 'Microsoft.Compute/galleries/images/versions', parameters('imageGallery').name, parameters('imageGallery').imageDefinitionName, parameters('imageGallery').imageVersionId))]"
            },
            "osDisk": {
              "createOption": "FromImage",
              "diffDiskSettings": "[if(parameters('virtualMachine').osEphemeralDisk, json('{\"option\": \"Local\"}'), json('null'))]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('virtualMachine').namePrefix]",
            "adminUsername": "[parameters('virtualMachine').username]",
            "adminPassword": "[parameters('virtualMachine').password]"
          },
          "evictionPolicy": "[parameters('virtualMachine').evictionPolicy]",
          "priority": "[parameters('virtualMachine').priority]",
          "billingProfile": {
            "maxPrice": "[parameters('virtualMachine').maxPrice]"
          }
        },
        "upgradePolicy": {
          "mode": "[parameters('virtualMachine').upgradePolicy]"
        },
        "platformFaultDomainCount": 1,
        "singlePlacementGroup": false,
        "overprovision": false
      }
    },
    {
      "condition": "[not(equals(parameters('joinDomain').username, ''))]",
      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
      "name": "[concat(parameters('virtualMachine').scaleSetName, '/JoinDomain')]",
      "apiVersion": "[variables('vmScaleSetApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachine').scaleSetName)]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "password": "[parameters('joinDomain').password]"
        },
        "settings": {
          "name": "[parameters('joinDomain').name]",
          "user": "[parameters('joinDomain').username]",
          "ouPath": "[parameters('joinDomain').ouPath]",
          "options": "[parameters('joinDomain').options]",
          "restart": true
        }
      }
    }
  ],
  "outputs": {
  }
}
