{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "cosmosAccount": {
      "type": "object"
    },
    "sqlDatabase": {
      "type": "object"
    }
  },
  "variables": {
    "cosmosDbApiVersion": "2021-03-01-preview"
  },
  "functions": [
    {
      "namespace": "fx",
      "members": {
        "GetResourceName": {
          "parameters": [
            {
              "name": "resource",
              "type": "object"
            }
          ],
          "output": {
            "type": "string",
            "value": "[if(equals(parameters('resource').name, ''), uniqueString(string(parameters('resource'))), parameters('resource').name)]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[parameters('cosmosAccount').name]",
      "apiVersion": "[variables('cosmosDbApiVersion')]",
      "location": "[resourceGroup().location]",
      "kind": "[parameters('cosmosAccount').type]",
      "tags": {
        "cosmosAccountType": "[parameters('cosmosAccount').userInterfaceType]",
        "defaultExperience": "[parameters('cosmosAccount').defaultExperience]"
      },
      "properties": {
        "databaseAccountOfferType": "[parameters('cosmosAccount').offerType]",
        "capabilities": "[parameters('cosmosAccount').capabilities]"
      }
    },
    {
      "condition": "[not(equals(parameters('sqlDatabase').name, ''))]",
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "name": "[concat(parameters('cosmosAccount').name, '/', fx.GetResourceName(parameters('sqlDatabase')))]",
      "apiVersion": "[variables('cosmosDbApiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', parameters('cosmosAccount').name)]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('sqlDatabase').name]"
        }
      }
    },
    {
      "condition": "[and(not(equals(parameters('sqlDatabase').name, '')), not(equals(parameters('sqlDatabase').containers[copyIndex()].name, '')))]",
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "name": "[concat(parameters('cosmosAccount').name, '/', fx.GetResourceName(parameters('sqlDatabase')), '/', fx.GetResourceName(parameters('sqlDatabase').containers[copyIndex()]))]",
      "apiVersion": "[variables('cosmosDbApiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosAccount').name, parameters('sqlDatabase').name)]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('sqlDatabase').containers[copyIndex()].name]",
          "partitionKey": {
            "kind": "[parameters('sqlDatabase').containers[copyIndex()].partitionKey.type]",
            "paths": [
              "[parameters('sqlDatabase').containers[copyIndex()].partitionKey.path]"
            ]
          }
        }
      },
      "copy": {
        "name": "sqlContainers",
        "count": "[length(parameters('sqlDatabase').containers)]"
      }
    }
  ],
  "outputs": {
    "primaryConnectionReadWrite": {
      "type": "string",
      "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccount').name), variables('cosmosDbApiVersion')).connectionStrings[0].connectionString]"
    },
    "primaryConnectionReadOnly": {
      "type": "string",
      "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccount').name), variables('cosmosDbApiVersion')).connectionStrings[2].connectionString]"
    }
  }
}
