{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "renderWorker": {
      "type": "object",
      "metadata": {
        "description": "The render farm worker."
      }
    },
    "renderManager": {
      "type": "object",
      "metadata": {
        "description": "The render farm manager."
      }
    },
    "cacheMounts": {
      "type": "string",
      "metadata": {
        "description": "The storage cache mounts."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "The virtual network subnet."
      }
    }
  },
  "variables": {
    "virtualNetworkApiVersion": "2019-11-01",
    "virtualMachineApiVersion": "2019-12-01"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('renderWorker').machineScaleSets[copyIndex()].name]",
      "sku": {
        "name": "[parameters('renderWorker').machineScaleSets[copyIndex()].machineSize]",
        "capacity": "[parameters('renderWorker').machineScaleSets[copyIndex()].machineCount]"
      },
      "properties": {
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic0",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": "[parameters('renderWorker').machineScaleSets[copyIndex()].acceleratedNetworking]",
                  "ipConfigurations": [
                    {
                      "name": "ipConfig0",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "billingProfile": {
            "maxPrice": "[parameters('renderWorker').machineScaleSets[copyIndex()].maxBillingPrice]"
          },
          "storageProfile": {
            "imageReference": {
              "id": "[parameters('renderWorker').imageVersionId]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "diffDiskSettings": "[if(parameters('renderWorker').machineScaleSets[copyIndex()].osEphemeralDisk, json(concat('{\"option\": \"Local\"}')), json('null'))]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('renderWorker').machineScaleSets[copyIndex()].name]",
            "adminUsername": "[parameters('renderWorker').machineScaleSets[copyIndex()].adminUsername]",
            "adminPassword": "[parameters('renderWorker').machineScaleSets[copyIndex()].adminPassword]",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('renderWorker').machineScaleSets[copyIndex()].adminUsername, '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('renderWorker').machineScaleSets[copyIndex()].sshPublicKeyData]"
                  }
                ]
              }
            }
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(parameters('renderWorker').machineScaleSets[copyIndex()].name, 'Extension')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "2.0",
                  "type": "CustomScript",
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo ', parameters('renderWorker').machineExtensionScript, ' | base64 --decode | gunzip | sed \"s|\r$||\" | HOME_DIRECTORY=\"', parameters('renderWorker').homeDirectory, '\" RENDER_MANAGER_HOST=\"', parameters('renderManager').hostAddress, '\" CACHE_MOUNTS=\"', parameters('cacheMounts'), '\" /bin/bash')]"
                  }
                }
              },
              {
                "name": "[concat(parameters('renderWorker').machineScaleSets[copyIndex()].name, 'Monitor')]",
                "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "1.12",
                  "type": "OmsAgentForLinux",
                  "protectedSettings": {
                    "workspaceKey": "[parameters('renderWorker').logAnalyticsWorkspaceKey]"
                  },
                  "settings": {
                    "workspaceId": "[parameters('renderWorker').logAnalyticsWorkspaceId]"
                  }
                }
              }
            ]
          },
          "priority": "[parameters('renderWorker').machineScaleSets[copyIndex()].machinePriority]",
          "evictionPolicy": "Delete"
        },
        "overprovision": false,
        "singlePlacementGroup": false,
        "platformFaultDomainCount": 1,
        "upgradePolicy": {
          "mode": "Manual"
        }
      },
      "copy": {
        "name": "renderWorkers",
        "count": "[length(parameters('renderWorker').machineScaleSets)]"
      }
    }
  ],
  "outputs": {
  }
}
