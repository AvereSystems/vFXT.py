{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "renderClient": {
      "type": "object",
      "metadata": {
        "description": "The render farm client configuration."
      }
    },
    "imageBuilder": {
      "type": "object",
      "metadata": {
        "description": "The builder of the shared image."
      }
    }
  },
  "variables": {
    "imageBuilderApiVersion": "2019-05-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.VirtualMachineImages/imageTemplates",
      "apiVersion": "[variables('imageBuilderApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('imageBuilder').templateName]",
      "properties": {
        "buildTimeoutInMinutes": "[parameters('imageBuilder').timeoutMinutes]",
        "source": {
          "type": "SharedImageVersion",
          "imageVersionId": "[parameters('imageBuilder').imageVersionId]"
        },
        "customize": [
          {
            "name": "OpenCue",
            "type": "Shell",
            "inline": [
              "[concat('curl --location ', parameters('renderClient').requirementsUrl, ' --output requirements.txt')]",
              "pip install --requirement requirements.txt",
              "[concat('cd ', parameters('renderClient').rootDirectory)]",
              "[concat('curl --location ', parameters('renderClient').pyCueUrl, ' --output opencue-pycue.tar.gz')]",
              "[concat('curl --location ', parameters('renderClient').pyOutlineUrl, ' --output opencue-pyoutline.tar.gz')]",
              "[concat('curl --location ', parameters('renderClient').cueSubmitUrl, ' --output opencue-cuesubmit.tar.gz')]",
              "[concat('curl --location ', parameters('renderClient').cueAdminUrl, ' --output opencue-cueadmin.tar.gz')]",
              "[concat('curl --location ', parameters('renderClient').cueGuiUrl, ' --output opencue-cuegui.tar.gz')]",
              "tar -xzf opencue-pycue.tar.gz",
              "tar -xzf opencue-pyoutline.tar.gz",
              "tar -xzf opencue-cuesubmit.tar.gz",
              "tar -xzf opencue-cueadmin.tar.gz",
              "tar -xzf opencue-cuegui.tar.gz",
              "cd pycue*",
              "python setup.py install",
              "cd ../pyoutline*",
              "python setup.py install",
              "cd ../cuesubmit*",
              "python setup.py install",
              "cd ../cueadmin*",
              "python setup.py install",
              "cd ../cuegui*",
              "python setup.py install"
            ]
          },
          {
            "name": "Display",
            "type": "Shell",
            "inline": [
              "yum -y install xorg-x11-server-Xorg",
              "yum -y install xorg-x11-xauth",
              "yum -y install qt5-qtbase",
              "cd /etc/ssh",
              "sed --in-place 's/#X11Forwarding yes/X11Forwarding yes/' sshd_config",
              "sed --in-place 's/#X11DisplayOffset 10/X11DisplayOffset 10/' sshd_config",
              "sed --in-place 's/#X11UseLocalhost yes/X11UseLocalhost yes/' sshd_config"
            ]
          }
        ],
        "distribute": [
          {
            "type": "SharedImage",
            "runOutputName": "SharedImage",
            "galleryImageId": "[resourceId('Microsoft.Compute/galleries/images', parameters('imageBuilder').imageGalleryName, parameters('imageBuilder').imageDefinitionName)]",
            "replicationRegions": [
              "[resourceGroup().location]"
            ],
            "artifactTags": {
              "imageTemplate": "[parameters('imageBuilder').templateName]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "imageTemplateName": {
      "type": "string",
      "value": "[parameters('imageBuilder').templateName]"
    }
  }
}