{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "renderManager": {
      "type": "string",
      "metadata": {
        "description": "The render farm manager endpoint."
      }
    },
    "renderWorkers": {
      "type": "array",
      "metadata": {
        "description": "The render farm workers configuration."
      }
    },
    "monitorAnalytics": {
      "type": "object",
      "metadata": {
        "description": "The monitor log analytics configuration."
      }
    },
    "rootDirectory": {
      "type": "string",
      "metadata": {
        "description": "The render farm worker root directory."
      }
    },
    "storageMounts": {
      "type": "string",
      "metadata": {
        "description": "The render farm workers storage mounts."
      }
    },
    "imageVersionId": {
      "type": "string",
      "metadata": {
        "description": "The render farm worker image version identifier."
      }
    },
    "machineExtensionScript": {
      "type": "string",
      "metadata": {
        "description": "The render farm worker extension script (compressed and encoded)."
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network resource group."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network resource."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network subnet."
      }
    }
  },
  "variables": {
    "virtualMachineApiVersion": "2019-07-01",
    "virtualNetworkApiVersion": "2019-09-01"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "[variables('virtualMachineApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('renderWorkers')[copyIndex()].name]",
      "sku": {
        "name": "[parameters('renderWorkers')[copyIndex()].machineSize]",
        "capacity": "[parameters('renderWorkers')[copyIndex()].machineCount]"
      },
      "properties": {
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic1",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": "[parameters('renderWorkers')[copyIndex()].acceleratedNetworking]",
                  "ipConfigurations": [
                    {
                      "name": "ipConfig1",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('virtualNetworkSubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "id": "[parameters('imageVersionId')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "diffDiskSettings": "[if(parameters('renderWorkers')[copyIndex()].ephemeralDisk, json(concat('{\"option\": \"Local\"}')), json('null'))]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('renderWorkers')[copyIndex()].name]",
            "adminUsername": "[parameters('renderWorkers')[copyIndex()].adminUsername]",
            "adminPassword": "[parameters('renderWorkers')[copyIndex()].adminPassword]",
            "linuxConfiguration": {
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('renderWorkers')[copyIndex()].adminUsername, '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('renderWorkers')[copyIndex()].sshPublicKeyData]"
                  }
                ]
              }
            }
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(parameters('renderWorkers')[copyIndex()].name, 'Monitor')]",
                "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "1.12",
                  "type": "OmsAgentForLinux",
                  "protectedSettings": {
                    "workspaceKey": "[parameters('monitorAnalytics').workspaceKey]"
                  },
                  "settings": {
                    "workspaceId": "[parameters('monitorAnalytics').workspaceId]"
                  }
                }
              },
              {
                "name": "[concat(parameters('renderWorkers')[copyIndex()].name, 'Dependency')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "9.9",
                  "type": "DependencyAgentLinux",
                  "provisionAfterExtensions": [
                    "[concat(parameters('renderWorkers')[copyIndex()].name, 'Monitor')]"
                  ]
                }
              },
              {
                "name": "[concat(parameters('renderWorkers')[copyIndex()].name, 'Extension')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "2.0",
                  "type": "CustomScript",
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo ', parameters('machineExtensionScript'), ' | base64 --decode | gunzip | sed \"s|\r$||\" | ROOT_DIRECTORY=\"', parameters('rootDirectory'), '\" RENDER_MANAGER=\"', parameters('renderManager'), '\" STORAGE_MOUNTS=\"', base64ToString(parameters('storageMounts')), '\" /bin/bash')]"
                  }
                }
              }
            ]
          },
          "priority": "[parameters('renderWorkers')[copyIndex()].machinePriority]",
          "evictionPolicy": "Delete"
        },
        "overprovision": false,
        "singlePlacementGroup": false,
        "platformFaultDomainCount": 1,
        "upgradePolicy": {
          "mode": "Manual"
        }
      },
      "copy": {
        "name": "renderWorkers",
        "count": "[length(parameters('renderWorkers'))]"
      }
    }
  ],
  "outputs": {
  }
}