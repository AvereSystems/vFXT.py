{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Name must be between 3 and 24 characters (alphanumeric)."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "StorageV2",
      "metadata": {
        "description": "The storage account type."
      }
    },
    "storageAccountReplication": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The storage account replication."
      }
    },
    "storageAccessTier": {
      "type": "string",
      "defaultValue": "Hot",
      "metadata": {
        "description": "The storage access tier."
      }
    },
    "storageContainers": {
      "type": "array",
      "metadata": {
        "description": "The storage blob containers."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64,
      "metadata": {
        "description": "Name must be between 2 and 64 characters (alphanumeric, hyphen, underscore and period)."
      }
    },
    "virtualNetworkAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "The address space (CIDR) of the virtual network."
      }
    },
    "virtualNetworkSubnets": {
      "type": "array",
      "metadata": {
        "description": "The subnets in the virtual network."
      }
    }
  },
  "variables": {
    "virtualNetworkApiVersion": "2019-09-01",
    "storageApiVersion": "2019-06-01",
    "storageAccountName": "[toLower(parameters('storageAccountName'))]",
    "storageAccountNetworked": "[not(equals(parameters('virtualNetworkAddressSpace'), ''))]",
    "storageCachePrincipalId": "831d4223-7a3c-4121-a445-1e423591e57b",
    "roleAssignmentApiVersion": "2019-04-01-preview"
  },
  "functions": [
  ],
  "resources": [
    {
      "condition": "[variables('storageAccountNetworked')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('virtualNetworkApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressSpace')]"
          ]
        },
        "copy": [
          {
            "name": "subnets",
            "count": "[length(parameters('virtualNetworkSubnets'))]",
            "input": {
              "name": "[parameters('virtualNetworkSubnets')[copyIndex('subnets')].name]",
              "properties": {
                "addressPrefix": "[parameters('virtualNetworkSubnets')[copyIndex('subnets')].addressSpace]",
                "serviceEndpoints": "[parameters('virtualNetworkSubnets')[copyIndex('subnets')].serviceEndpoints]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageAccountName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "kind": "[parameters('storageAccountType')]",
      "sku": {
        "name": "[parameters('storageAccountReplication')]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "[parameters('storageAccessTier')]",
        "networkAcls": "[if(variables('storageAccountNetworked'), json(concat('{\"bypass\": \"None\", \"defaultAction\": \"Deny\", \"virtualNetworkRules\": [{\"action\": \"Allow\", \"id\": \"', resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('virtualNetworkSubnets')[0].name), '\"}]}')), json('null'))]"
      }
    },
    {
      "condition": "[greater(length(parameters('storageContainers')), 0)]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('storageAccountName'), '/default/', toLower(parameters('storageContainers')[copyIndex()].name))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      },
      "copy": {
        "name": "storageContainers",
        "count": "[length(parameters('storageContainers'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "[variables('roleAssignmentApiVersion')]",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid('storageAccountContributor'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "principalId": "[variables('storageCachePrincipalId')]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "[variables('roleAssignmentApiVersion')]",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid('storageDataBlobContributor'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "principalId": "[variables('storageCachePrincipalId')]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
      }
    }
  ],
  "outputs": {
    "virtualNetworkName": {
      "type": "string",
      "value": "[if(variables('storageAccountNetworked'), parameters('virtualNetworkName'), '')]"
    },
    "storageTargets": {
      "type": "array",
      "value": [
        {
          "name": "[if(variables('storageAccountNetworked'), concat(parameters('virtualNetworkName'), '.', parameters('storageContainers')[0].name), parameters('storageContainers')[0].name)]",
          "type": "clfs",
          "host": "[split(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, '/')[2]]",
          "target": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', toLower(parameters('storageContainers')[0].name))]",
          "junctions": "[parameters('storageContainers')[0].junctions]",
          "mountOptions": "[parameters('storageContainers')[0].mountOptions]"
        },
        {
          "name": "[if(variables('storageAccountNetworked'), concat(parameters('virtualNetworkName'), '.', parameters('storageContainers')[1].name), parameters('storageContainers')[1].name)]",
          "type": "clfs",
          "host": "[split(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, '/')[2]]",
          "target": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', toLower(parameters('storageContainers')[1].name))]",
          "junctions": "[parameters('storageContainers')[1].junctions]",
          "mountOptions": "[parameters('storageContainers')[1].mountOptions]"
        }
      ]
    }
  }
}