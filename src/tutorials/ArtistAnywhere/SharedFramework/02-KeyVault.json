{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVault": {
      "type": "object",
      "metadata": {
        "description": "The key vault."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "The virtual network."
      }
    }
  },
  "variables": {
    "keyVaultApiVersion": "2019-09-01",
    "privateEndpointApiVersion": "2020-07-01"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVault').name]",
      "apiVersion": "[variables('keyVaultApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "[parameters('keyVault').tier]",
          "family": "A"
        },
        "tenantId": "[subscription().tenantId]",
        "softDeleteRetentionInDays": "[parameters('keyVault').softDeleteRetentionDays]",
        "enabledForDeployment": "[parameters('keyVault').enableDeployment]",
        "enabledForDiskEncryption": "[parameters('keyVault').enableDiskEncryption]",
        "enabledForTemplateDeployment": "[parameters('keyVault').enableTemplateDeployment]",
        "enableRbacAuthorization": "[parameters('keyVault').enableRbacAuthorization]",
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "name": "[parameters('keyVault').name]",
      "apiVersion": "[variables('privateEndpointApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name)]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('keyVault').name]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name)]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "keyVault": {
      "type": "object",
      "value": {
        "name": "[parameters('keyVault').name]",
        "resourceGroupName": "[resourceGroup().name]",
        "url": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name), variables('keyVaultApiVersion')).vaultUri]"
      }
    }
  }
}
