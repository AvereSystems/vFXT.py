{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniquename": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for resource names associated with these virtual machine clients"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "The admin username for the virtual machine clients."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The admin password for the virtual machine clients."
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "The number of vms to deploy."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The SKU size of vms to deploy."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The resource group name for the VNET containing the Avere vFXT."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name used for the virtual network for the VNET containing the Avere vFXT."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the virtual network subnet for the VNET containing the Avere vFXT."
      }
    },
    "nfsCommaSeparatedAddresses": {
      "type": "string",
      "metadata": {
        "description": "A comma separated list of Avere vFXT vServer IP Addresses."
      }
    },
    "nfsExportPath": {
      "type": "string",
      "metadata": {
        "description": "The path exported from the NFS server that will be mounted."
      }
    },
    "nfsMountBaseDir": {
      "type": "string",
      "defaultValue": "/nfs",
      "metadata": {
        "description": "The base directory to contain all NFS mounts."
      }
    },
    "bootstrapScriptPath": {
      "type": "string",
      "defaultValue": "/bootstrap/bootstrap.sh",
      "metadata": {
        "description": "The path on the mounted NFS share to the bootstrap script used for further installation"
      }
    }
  },
  "variables": {
    "uniquename": "[concat(parameters('uniquename'))]",
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "vmCount": "[parameters('vmCount')]",
    "vmSize": "[parameters('vmSize')]",
    "virtualNetworkResourceGroup": "[parameters('virtualNetworkResourceGroup')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "virtualNetworkSubnetName": "[parameters('virtualNetworkSubnetName')]",
    "nfsCommaSeparatedAddresses": "[parameters('nfsCommaSeparatedAddresses')]",
    "nfsExportPath": "[parameters('nfsExportPath')]",
    "nfsMountBaseDir": "[parameters('nfsMountBaseDir')]",
    "bootstrapScriptPath": "[parameters('bootstrapScriptPath')]",
    "vnetID": "[resourceId(variables('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/',variables('virtualNetworkSubnetName'))]",
    "nicName": "[concat('vmnic-',variables('uniquename'))]",
    "vmName": "[concat('vm-',variables('uniquename'))]",
    "bootstrapNFSIP": "[split(variables('nfsCommaSeparatedAddresses'),',')[0]]",
    "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
    },
    "environmentVariables": "[concat(' BASE_DIR=',variables('nfsMountBaseDir'),' BOOTSTRAP_NFS_IP=', variables('bootstrapNFSIP'),' BOOTSTRAP_SCRIPT_PATH=', variables('bootstrapScriptPath'),' NFS_IP_CSV=\"',variables('nfsCommaSeparatedAddresses'),'\"',' NFS_PATH=', variables('nfsExportPath'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), '-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), '-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '-', copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), '-', copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '-', copyIndex(), '/configureagent')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmExtensionNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '-', copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Azure/Avere/master/src/clients/mountandbootstrap.sh"
          ],
          "commandToExecute": "[concat(variables('environmentVariables'), ' /bin/bash mountandbootstrap.sh')]"
        }
      }
    }
  ],
  "outputs": {}
}
