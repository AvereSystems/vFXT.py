{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the VM."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "avereclient",
      "metadata": {
        "description": "The name prefix used for the VM"
      }
    },
    "avereVServerCommaSeparatedAddresses": {
      "type": "string",
      "metadata": {
        "description": "A comma separated list of Avere vFXT vServer IP Addresses."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the controller VM."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username on the controller VM."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "The public SSH key used for access to the VM."
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified reference to the subnet of the Avere vFXT cluster.  Example /subscriptions/SUBSCRIPTION/resourceGroups/RESOURCEGROUP/providers/Microsoft.Network/virtualNetworks/NETWORK_NAME/subnets/SUBNET_NAME."
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "The number of nodes to deploy."
      }
    }
  },
  "variables": {
    "masterEndpointDNSNamePrefix": "[parameters('uniqueName')]",
    "vmName": "[parameters('vmName')]",
    "vmSize": "[parameters('vmSize')]",
    "adminUsername": "[parameters('adminUsername')]",
    "sshKeyData": "[parameters('sshKeyData')]",    
    "subnetId": "[parameters('subnetId')]",
    "vmCount": "[parameters('vmCount')]",
    "avereVServerCommaSeparatedAddresses": "[parameters('avereVServerCommaSeparatedAddresses')]",
    "availabilitySet": "[concat(parameters('uniqueName'), '-multivmas')]",
    "nsgname": "[concat(parameters('uniqueName'), '-nsgname')]",
    "nsgid": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgname'))]",
    "lbname": "[concat(parameters('uniqueName'), '-lb')]",
    "lbid": "[resourceId('Microsoft.Network/loadBalancers',variables('lbname'))]",
    "lbIPConfigName": "[concat(parameters('uniqueName'), '-lbIPConfigName')]",
    "lbIPConfigNameID": "[concat(variables('lbid'),'/frontendIPConfigurations/', variables('lbIPConfigName'))]",
    "lbBackendPoolName": "[concat(parameters('uniqueName'), '-lbBackendPoolName')]",
    "publicIPAddressName": "[concat(parameters('uniqueName'), '-publicip')]",
    "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
    "environmentVariables": "[concat(' NODE_PREFIX=', variables('vmName'), ' NODE_COUNT=',variables('vmCount'), ' LINUX_USER=',variables('adminUsername'), ' AVEREVFXT_NODE_IPS=', variables('avereVServerCommaSeparatedAddresses'))]",
    "imageReference": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "18.04-LTS",
      "version": "latest"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('lbname')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('lbname'), '/', 'SSH-', variables('vmName'), '0')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('lbid')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('lbIPConfigNameID')]"
        },
        "protocol": "tcp",
        "frontendPort": 22,
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('lbname'), '/', 'SSH-', variables('vmName'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbLoopNode",
        "count": "[sub(variables('vmCount'),1)]"
      },
      "dependsOn": [
        "[variables('lbid')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('lbIPConfigNameID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2202)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmName'), 'nic-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat(variables('lbid'),'/inboundNatRules/SSH-',variables('vmName'),copyIndex())]",
        "[variables('nsgid')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('nsgid')]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbid'), '/backendAddressPools/', variables('lbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbid'),'/inboundNatRules/SSH-',variables('vmName'),copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmName'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('availabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "customData": "[base64('#clusterCustomDataInstallYaml')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[variables('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName'), 'nic-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[concat(variables('environmentVariables'), ' /bin/bash -c \"/bin/bash /opt/avere/installvdbench.sh >> /opt/avere/vdbench-install.log 2>&1\"')]"
        }
      }
    }
  ],
  "outputs": {
    "RESOURCE_GROUP": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "LOCATION": {
      "type": "string",
      "value": "[resourceGroup().location]"
    },
    "CLIENT_ADDRESS": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "SSH_STRING": {
      "type": "string",
      "value": "[concat('ssh ', variables('adminUsername'), '@', reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).dnsSettings.fqdn)]"
    }
  }
}