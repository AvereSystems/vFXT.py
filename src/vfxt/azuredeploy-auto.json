{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure location where the resources are deployed.  If blank, resourceGroup().location is used."
      }
    },
    "createVirtualNetwork": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the VNET based on the virtual network resource group, virtual network name, and subnet name provided, otherwise use the virtual network based on those names."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group name for the VNET. If createVirtualNetwork is set to true, this field should be blank. Otherwise, provide the name of the resource group containing an existing VNET."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the virtual network. If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the virtual network subnet. If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "vnetAddressSpacePrefix":{
      "type": "string",
      "metadata": {
        "description": "Virtual network address space prefix used when creating a virtual network with this deployment. E.g. 192.168.0.0/16"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "subnetAddressRangePrefix":{
      "type": "string",
      "metadata": {
        "description": "Subnet address range prefix used when creating a virtual network/subnet with this deployment. E.g. 192.168.0.0/24"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "useAvereBackedStorageAccount": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the storage account and use that for the backing storage account.  If false, the minimal Avere vFXT cluster will be created."
      }
    },
    "avereBackedStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "A unique storage account to be created for backing the Avere vFXT.  If 'useAvereBackedStorageAccount' is set to false, this field is unused."
      }
    },
    "controllerName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for resource names associated with the controller"
      }
    },
    "controllerAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The controller admin username."
      }
    },
    "controllerAuthenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "The controller may be configured with a password or public SSH key."
      }
    },
    "controllerPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'password', the admin password used for the controller."
      }
    },
    "controllerSSHKeyData": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'sshPublicKey', the controller public SSH key."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The admin password used for the Avere vFXT cluster."
      }
    },
    "avereCreateClusterRoleId": {
      "type": "string",
      "defaultValue": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "metadata": {
        "description": "The AAD role id used for creation of the vFXT cluster.  The default GUID is the Owner built-in role.  However, we recommend you create your own role as described in https://github.com/Azure/Avere/tree/master/src/vfxt#managed-identity-and-roles.  After role creation, obtain the ID by using the following az command: az role definition list --query '[*].{roleName:roleName, name:name}' -o table --name 'Avere Contributor'.  Microsoft employees use 'a7b1b19a-0e83-4fe5-935c-faaefbfd18c3'."
      }
    },
    "avereClusterRole": {
      "type": "string",
      "defaultValue": "avere-cluster",
      "metadata": {
        "description": "The AAD role used by the running vFXT cluster."
      }
    },
    "avereClusterName": {
      "type": "string",
      "metadata": {
        "description": "The cluster name should be unique within the resource group."
      }
    },
    "avereInstanceType": {
      "type": "string",
      "defaultValue": "Standard_E32s_v3",
      "allowedValues": [
        "Standard_E32s_v3"
      ],
      "metadata": {
        "description": "The SKU for the Avere vFXT VM."
      }
    },
    "avereNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 12,
      "metadata": {
        "description": "The number of vFXT nodes in the Avere vFXT cluster"
      }
    },
    "avereCacheSizeGB": {
      "type": "int",
      "defaultValue": 1024,
      "allowedValues": [
        1024,
        4096
      ],
      "metadata": {
        "description": "The cache size in GB to use for each Avere vFXT VM."
      }
    },
    "enableCloudTraceDebugging": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When working with Azure Support, set this value to true, otherwise keep as false."
      }
    },
    "rbacRoleAssignmentUniqueId": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The Azure role assignment unique id.  If blank, vmname is used."
      }
    }
  },
  "variables": {
    "location": "[parameters('location')]",
    "createVirtualNetwork": "[parameters('createVirtualNetwork')]",
    "virtualNetworkResourceGroup": "[parameters('virtualNetworkResourceGroup')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "virtualNetworkSubnetName": "[parameters('virtualNetworkSubnetName')]",
    "addressPrefix": "[parameters('vnetAddressSpacePrefix')]",
    "subnetPrefix": "[parameters('subnetAddressRangePrefix')]",
    "useAvereBackedStorageAccount": "[parameters('useAvereBackedStorageAccount')]",
    "avereBackedStorageAccountName": "[parameters('avereBackedStorageAccountName')]",
    "controllerName": "[parameters('controllerName')]",
    "controllerAdminUsername": "[parameters('controllerAdminUsername')]",
    "controllerAuthenticationType": "[parameters('controllerAuthenticationType')]",
    "controllerPassword": "[parameters('controllerPassword')]",
    "controllerSSHKeyData": "[parameters('controllerSSHKeyData')]",
    "adminPassword": "[parameters('adminPassword')]",
    "avereCreateClusterRoleFullyQualifiedId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', parameters('avereCreateClusterRoleId'))]",
    "avereClusterRole": "[parameters('avereClusterRole')]",
    "avereClusterName": "[parameters('avereClusterName')]",
    "avereInstanceType": "[parameters('avereInstanceType')]",
    "avereNodeCount": "[parameters('avereNodeCount')]",
    "avereCacheSizeGB": "[parameters('avereCacheSizeGB')]",
    "enableCloudTraceDebugging": "[parameters('enableCloudTraceDebugging')]",
    "rbacRoleAssignmentUniqueId": "[if(greater(length(parameters('rbacRoleAssignmentUniqueId')), 0), parameters('rbacRoleAssignmentUniqueId'), variables('vmName'))]",

    "nicName": "[concat('vmnic-',variables('controllerName'))]",
    "createRoleAssignmentId": "[guid(concat(variables('rbacRoleAssignmentUniqueId'), '-createrole'))]",
    "userAdminClusterRoleFullyQualifiedId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
    "userAdminRoleAssignmentId": "[guid(concat(variables('rbacRoleAssignmentUniqueId'), '-useradmin'))]",
    "createVNETRoleAssignmentId": "[guid(concat(variables('rbacRoleAssignmentUniqueId'), '-createvnetrole'))]",
    "vnetAssignRoleName": "vnetAssignRole",
    "additionalVFXTParameters": "[concat(' --nodes ', variables('avereNodeCount'), if(variables('enableCloudTraceDebugging'),' --skip-cleanup ',''), ' --debug')]",
    "controllerVMSize": "Standard_A1_v2",
    "publicIPAddressName": "[concat('publicip-',variables('controllerName'))]",
    "networkSecurityGroupName": "[concat('nsg-',variables('controllerName'))]",
    "subnetId": "[resourceId(variables('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('virtualNetworkSubnetName'))]",
    "vmName": "[concat('vm-',variables('controllerName'))]",
    "extensionName": "[concat('/create.vfxt',if(variables('createVirtualNetwork'),'.vnet','.novnet'),if(variables('useAvereBackedStorageAccount'),'.stg','.nostg'))]",
    "pipObject": {
      "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
    },
    "createNic?": true,
    "useExtension?": true,
    "storageAccountType": "Standard_LRS",
    "storageAccountKind": "StorageV2",
    "environmentVariables": "[concat(' SUBSCRIPTION_ID=', subscription().subscriptionId,' RESOURCE_GROUP=', resourceGroup().name, ' LOCATION=', variables('location'), ' NETWORK_RESOURCE_GROUP=', variables('virtualNetworkResourceGroup'), ' NETWORK=', variables('virtualNetworkName'),' SUBNET=', variables('virtualNetworkSubnetName'), ' AVERE_CLUSTER_ROLE=\"', variables('avereClusterRole'), '\" CREATE_CLOUD_BACKED_CLUSTER=', variables('useAvereBackedStorageAccount'), ' STORAGE_ACCOUNT=', variables('avereBackedStorageAccountName'), ' CACHE_SIZE=', variables('avereCacheSizeGB'), ' CLUSTER_NAME=', variables('avereClusterName'), ' INSTANCE_TYPE=', variables('avereInstanceType'), ' CONTROLLER_ADMIN_USER_NAME=', variables('controllerAdminUsername'),' ENABLE_CLOUD_TRACE_DEBUG=', variables('enableCloudTraceDebugging'), ' DEBUG=\"', variables('additionalVFXTParameters'), '\"')]",
    "sshKeyPath": "[concat('/home/',variables('controllerAdminUsername'),'/.ssh/authorized_keys')]",
    "nicNetworkSecurityGroup": {
      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
    },
    "controllerOSProfilePassword": {
      "computerName": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "adminPassword": "[variables('controllerPassword')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/81X/2/aRhT/3X/Fq+sKUOJA1u2HJUIVC6RFghABbbe1nXXYZzjFvvN855CI8b/v3dkYQ6Bdu02bKzX2u/f1877c4/mz5ozx5ozIhWU9//bHwn/wnih/AffhgzqLxBwID4ByMoso+JHIAlAp8SmQUNEU1IKiREw4mdOYcgX9W2ASUupTdk+DUyMdMHlYHEVRAUg/ZYmCBZEQMs7kggZnAFM8SbI0EZKCCHeEmUTJUKRAgoApJjiJIKCzbD5nfA6M41FMNB2CLM1JUpEoMrQzE2SPyyxFl0ScRNSwzh5BKpEkhj80jpUYhAzdDwTVdrlQIBdiCVkC6ELBWrWwCUirkwYCFCt1GSrMqLaTJQFRGK126W9kDdWnNBGpAnQBIsZpbhboA1OADtE0FaklqQL3wTKoY5IKL5cMZRbIjSFqcaZkzo86pMCoeQ1D0aI61cWL1fn17bjnvRkNe163P243FyKmTedqdDMdjwaD3tjrdIf9G+/tBF9vOsOe9e7656k3GL32rvuDXtvZlW9u0LHed/pTb9JDRd1J+2WrZY1vr7zeTecnFLLzMrQNrduf5MSiumzLCjPu5/hTHiBPvQErC/DRTp88mFeWYM2kVMq2c34JxPC3ne8sc9h51xv3robdtk3uKdZwHIDrpmSJ/3Ph+gvq37k+TRULmY95Q3Imqa7CmHH8SIiUS5EG4OTB33Ymk/ejcRePkA01glOat3NvQvgAtpO7YUO7jR/bgG34BJe6urhh1g/1FwJsHR/UZJbonJ8R36eJmtI0lvBIZQ2UAGdVWlrbpbSzCRCOyJacKJhFqu28sg6Zdla5x+uvMRWLgIWPYK9qpokH9J5GtQuotR6+b1We2inUUhFhEc+nmk+z6KiQjB2m5FBwpkRaIcc0Fuljd9P/m5OKM5to6vX87cR51WiYUxodS0FRX5/PwT8MxPmh4Lk4FHtOPRA6HhyI/FURraR7YfTG49H4AmYkKJrhiey5IYTMKlvJzVsppSpLOTg5n7WuNKBpFW9BIhxunu7tshW5WGIe9NSDkxeyUeiOaKxYTPFExwmuDy9+AWdnZOSsiFyIncl9zVt3UJvrlOJFTouMblltcOcKKdXZcjSv151pZ3BhZno5+Z3Vjitrc1Xl0W3hMrO2BKuKxpIwZVDwUGOJhC8yjndgu2W+lgtt6AM8Azfcixw+XeIULu3IiNKkMFTVg3gUr3AC5wUWJR7O5sydYzxVJLT6HRy2WJjga/vR1zALgbkGSZJQkhargLOqal1jpfiCB9Le1bsFqQDKZFVw+hSx7VbhsaSELQfqopDbBrmd63U6x9sQ7N82lPqHlvvjp9X56cv1x7PG6uV6+20/ze0fQJZ3UFvFeg2qO63TpmE/+Xh2+G+zcYnWoY39PZMq1RLjybQznp6OB72b19M3eJ7gFqKQa13bS4vtrJ5XpkZeqC0szpLtSGoODxv9zFJK7vYRNoWy35QHS+pwLoo9iXoxGsSsfDEdIZgkuO7vGcORYWt7F/2b6xG4cFUoewr+0UrU4qbrNo4EOxvX5xAwI/6AM2byoTfXBCMI9AD3UU7pNTWTWNBf693OBhgapf9uYvJtyDOLsWeukjIr1S3H2vqp0ke9dWKoBxZ62/pcQvWGieJ666Z6k8FhwiJYUiQT/LWgx2U8j3WN66V4Z3k2C2+1Mor1rLINQWXrgaMwb+RkhluLlF9A9y/D+8MW3gpWVWhytDCdVfiLvfPb8D/0k+i/T0Cx8/wPM1DgtZeCmDBeYp4L6WllfhqanixvcIQ8v6xyl3du5Nzm8PVw6vVv8fp4evk0CreeNBw4hZi1Vbs/Kq1icZHHhTEmHcqfLtkq1cYPAAA=\n    path: /opt/avere/enablecloudtrace.sh\n    permissions: \"0744\"\n\n')]"
    },
    "controllerOSProfileSSHKey": {
      "computername": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/81X/2/aRhT/3X/Fq+sKUOJA1u2HJUIVC6RFghABbbe1nXXYZzjFvvN855CI8b/v3dkYQ6Bdu02bKzX2u/f1877c4/mz5ozx5ozIhWU9//bHwn/wnih/AffhgzqLxBwID4ByMoso+JHIAlAp8SmQUNEU1IKiREw4mdOYcgX9W2ASUupTdk+DUyMdMHlYHEVRAUg/ZYmCBZEQMs7kggZnAFM8SbI0EZKCCHeEmUTJUKRAgoApJjiJIKCzbD5nfA6M41FMNB2CLM1JUpEoMrQzE2SPyyxFl0ScRNSwzh5BKpEkhj80jpUYhAzdDwTVdrlQIBdiCVkC6ELBWrWwCUirkwYCFCt1GSrMqLaTJQFRGK126W9kDdWnNBGpAnQBIsZpbhboA1OADtE0FaklqQL3wTKoY5IKL5cMZRbIjSFqcaZkzo86pMCoeQ1D0aI61cWL1fn17bjnvRkNe163P243FyKmTedqdDMdjwaD3tjrdIf9G+/tBF9vOsOe9e7656k3GL32rvuDXtvZlW9u0LHed/pTb9JDRd1J+2WrZY1vr7zeTecnFLLzMrQNrduf5MSiumzLCjPu5/hTHiBPvQErC/DRTp88mFeWYM2kVMq2c34JxPC3ne8sc9h51xv3robdtk3uKdZwHIDrpmSJ/3Ph+gvq37k+TRULmY95Q3Imqa7CmHH8SIiUS5EG4OTB33Ymk/ejcRePkA01glOat3NvQvgAtpO7YUO7jR/bgG34BJe6urhh1g/1FwJsHR/UZJbonJ8R36eJmtI0lvBIZQ2UAGdVWlrbpbSzCRCOyJacKJhFqu28sg6Zdla5x+uvMRWLgIWPYK9qpokH9J5GtQuotR6+b1We2inUUhFhEc+nmk+z6KiQjB2m5FBwpkRaIcc0Fuljd9P/m5OKM5to6vX87cR51WiYUxodS0FRX5/PwT8MxPmh4Lk4FHtOPRA6HhyI/FURraR7YfTG49H4AmYkKJrhiey5IYTMKlvJzVsppSpLOTg5n7WuNKBpFW9BIhxunu7tshW5WGIe9NSDkxeyUeiOaKxYTPFExwmuDy9+AWdnZOSsiFyIncl9zVt3UJvrlOJFTouMblltcOcKKdXZcjSv151pZ3BhZno5+Z3Vjitrc1Xl0W3hMrO2BKuKxpIwZVDwUGOJhC8yjndgu2W+lgtt6AM8Azfcixw+XeIULu3IiNKkMFTVg3gUr3AC5wUWJR7O5sydYzxVJLT6HRy2WJjga/vR1zALgbkGSZJQkhargLOqal1jpfiCB9Le1bsFqQDKZFVw+hSx7VbhsaSELQfqopDbBrmd63U6x9sQ7N82lPqHlvvjp9X56cv1x7PG6uV6+20/ze0fQJZ3UFvFeg2qO63TpmE/+Xh2+G+zcYnWoY39PZMq1RLjybQznp6OB72b19M3eJ7gFqKQa13bS4vtrJ5XpkZeqC0szpLtSGoODxv9zFJK7vYRNoWy35QHS+pwLoo9iXoxGsSsfDEdIZgkuO7vGcORYWt7F/2b6xG4cFUoewr+0UrU4qbrNo4EOxvX5xAwI/6AM2byoTfXBCMI9AD3UU7pNTWTWNBf693OBhgapf9uYvJtyDOLsWeukjIr1S3H2vqp0ke9dWKoBxZ62/pcQvWGieJ666Z6k8FhwiJYUiQT/LWgx2U8j3WN66V4Z3k2C2+1Mor1rLINQWXrgaMwb+RkhluLlF9A9y/D+8MW3gpWVWhytDCdVfiLvfPb8D/0k+i/T0Cx8/wPM1DgtZeCmDBeYp4L6WllfhqanixvcIQ8v6xyl3du5Nzm8PVw6vVv8fp4evk0CreeNBw4hZi1Vbs/Kq1icZHHhTEmHcqfLtkq1cYPAAA=\n    path: /opt/avere/enablecloudtrace.sh\n    permissions: \"0744\"\n\n')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[variables('sshKeyPath')]",
              "keyData": "[variables('controllerSSHKeyData')]"
            }
          ]
        }
      }
    },
    "controllerOSProfile": "[if(equals(variables('controllerAuthenticationType'),'password'),variables('controllerOSProfilePassword'),variables('controllerOSProfileSSHKey'))]",
    "controllerStorageProfile": {
      "imageReference": {
        "publisher": "microsoft-avere",
        "offer": "vfxt",
        "sku": "avere-vfxt-controller",
        "version": "latest"
      }
    },
    "vsip": "VSERVER_IPS=",
    "mip": "MGMT_IP="
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-7a86fa6c-a5c7-4f21-b9fa-efa3dcbfbb86",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualNetworkSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createNic?')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[if(variables('createVirtualNetwork'), variables('pipObject'), json('null'))]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": "[if(variables('createVirtualNetwork'), variables('nicNetworkSecurityGroup'), json('null'))]"
      }
    },
    {
      "apiVersion": "2017-12-01",
      "tags": {
        "averevfxt": "server"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "identity": {
        "type": "SystemAssigned"
      },
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "plan": {
        "name": "avere-vfxt-controller",
        "publisher": "microsoft-avere",
        "product": "vfxt"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('controllerVMSize')]"
        },
        "osProfile": "[variables('controllerOSProfile')]",
        "storageProfile": "[variables('controllerStorageProfile')]",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('createRoleAssignmentId')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('avereCreateClusterRoleFullyQualifiedId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('userAdminRoleAssignmentId')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[concat('Microsoft.Authorization/roleAssignments/', variables('createRoleAssignmentId'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('userAdminClusterRoleFullyQualifiedId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "condition": "[not(variables('createVirtualNetwork'))]",
      "apiVersion": "2018-05-01",
      "name": "[variables('vnetAssignRoleName')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "resourceGroup": "[variables('virtualNetworkResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('createVNETRoleAssignmentId')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "properties": {
                "roleDefinitionId": "[variables('avereCreateClusterRoleFullyQualifiedId')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
                "scope": "[concat(subscription().id, '/resourceGroups/', parameters('virtualNetworkResourceGroup'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[variables('useExtension?')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), variables('extensionName'))]",
      "apiVersion": "2017-12-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('userAdminRoleAssignmentId'))]",
        "[concat('Microsoft.Resources/deployments/', variables('vnetAssignRoleName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('avereBackedStorageAccountName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(' ADMIN_PASSWORD=', variables('adminPassword'), variables('environmentVariables'), ' /bin/bash /opt/avere/installvfxt.sh')]"
        }
      }
    },
    {
      "condition": "[variables('useAvereBackedStorageAccount')]",
      "name": "[variables('avereBackedStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "[variables('storageAccountKind')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "networkAcls": {
          "bypass": "None",
          "virtualNetworkRules": [
            {
              "id": "[variables('subnetId')]",
              "action": "Allow"
            }
          ],
          "defaultAction": "Deny"
        }
      }
    }
  ],
  "outputs": {
    "ssh_string": {
      "type": "string",
      "value": "[if(variables('createVirtualNetwork'), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).ipAddress), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))).ipConfigurations[0].properties.privateIPAddress))]"
    },
    "resource_group": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[variables('location')]"
    },
    "network_resource_group": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroup')]"
    },
    "network": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "subnet": {
      "type": "string",
      "value": "[variables('virtualNetworkSubnetName')]"
    },
    "subnet_id": {
      "type": "string",
      "value": "[variables('subnetId')]"
    },
    "vserver_ips": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip')))),'\n'))]"
    },
    "mgmt_ip": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,variables('mip')),length(variables('mip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions',variables('extensionName'))).instanceView.statuses[0].message,variables('mip')),length(variables('mip')))),'\n'))]"
    }
  }
}
