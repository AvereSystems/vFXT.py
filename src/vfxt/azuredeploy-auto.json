{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicePrincipalTenant": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "Directory ID (tenant) of the Azure Active Directory used by the az cli to deploy vFXT installation."
      }
    },
    "servicePrincipalAppId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "Azure Active Directory Application client ID (appid) used by the az cli to deploy vFXT installation."
      }
    },
    "servicePrincipalPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Active Directory Application client ID password used by the az cli to deploy vFXT installation."
      }
    },
    "createVirtualNetwork": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the VNET based on the virtual network resource group, virtual network name, and subnet name provided, otherwise use the virtual network based on those names."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The resource group name for the VNET.  If createVirtualNetwork is set to true, the current resource group must be specified, otherwise the value should be blank."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name used for the virtual network.  If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the virtual network subnet.  If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "vnetAddressSpacePrefix":{
      "type": "string",
      "metadata": {
        "description": "Virtual network address space prefix used when creating a virtual network with this deployment. E.g. 192.168.0.0/16"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "subnetAddressRangePrefix":{
      "type": "string",
      "metadata": {
        "description": "Subnet address range prefix used when creating a virtual network/subnet with this deployment. E.g. 192.168.0.0/24"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "useAvereBackedStorageAccount": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the storage account and use that for the backing storage account.  If false, the minimal Avere vFXT cluster will be created."
      }
    },
    "avereBackedStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "A unique storage account to be created for backing the Avere vFXT.  If 'useAvereBackedStorageAccount' is set to false, this field is unused."
      }
    },
    "controllerName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for resource names associated with the controller"
      }
    },
    "controllerAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "The controller admin username."
      }
    },
    "controllerAuthenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "The controller may be configured with a password or public SSH key."
      }
    },
    "controllerPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'password', the admin password used for the controller."
      }
    },
    "controllerSSHKeyData": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'sshPublicKey', the controller public SSH key."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The admin password used for the Avere vFXT cluster."
      }
    },
    "avereCreateClusterRoleId": {
      "type": "string",
      "defaultValue": "a7b1b19a-0e83-4fe5-935c-faaefbfd18c3",
      "metadata": {
        "description": "The AAD role id used for creating of the vFXT cluster.  This is the ID obtained using the following az command: az role definition list --query '[*].{roleName:roleName, name:name}' -o table --name 'Avere Cluster Create'."
      }
    },
    "avereClusterRole": {
      "type": "string",
      "defaultValue": "avere-cluster",
      "metadata": {
        "description": "The AAD role used by the running vFXT cluster."
      }
    },
    "avereClusterName": {
      "type": "string",
      "defaultValue": "avere-cluster",
      "metadata": {
        "description": "The cluster name should be unique within the resource group."
      }
    },
    "avereInstanceType": {
      "type": "string",
      "defaultValue": "Standard_D16s_v3",
      "allowedValues": [
        "Standard_D16s_v3",
        "Standard_E32s_v3"
      ],
      "metadata": {
        "description": "The SKU for the Avere vFXT VM."
      }
    },
    "avereNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 12,
      "metadata": {
        "description": "The number of vFXT nodes in the Avere vFXT cluster"
      }
    },
    "avereCacheSizeGB": {
      "type": "int",
      "defaultValue": 1024,
      "allowedValues": [
        1024,
        4096
      ],
      "metadata": {
        "description": "The cache size in GB to use for each Avere vFXT VM."
      }
    }
  },
  "variables": {
    "controllerName": "[parameters('controllerName')]",
    "controllerAdminUsername": "[parameters('controllerAdminUsername')]",
    "controllerAuthenticationType": "[parameters('controllerAuthenticationType')]",
    "controllerPassword": "[parameters('controllerPassword')]",
    "controllerSSHKeyData": "[parameters('controllerSSHKeyData')]",
    "adminPassword": "[parameters('adminPassword')]",
    "nicName": "[concat('vmnic-',variables('controllerName'))]",
    "createVirtualNetwork": "[parameters('createVirtualNetwork')]",
    "virtualNetworkResourceGroup": "[if(variables('createVirtualNetwork'), resourceGroup().name, parameters('virtualNetworkResourceGroup'))]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "virtualNetworkSubnetName": "[parameters('virtualNetworkSubnetName')]",
    "addressPrefix": "[parameters('vnetAddressSpacePrefix')]",
    "subnetPrefix": "[parameters('subnetAddressRangePrefix')]",
    "avereCreateClusterRoleFullyQualifiedId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', parameters('avereCreateClusterRoleId'))]",
    "createRoleAssignmentId": "[guid(concat(variables('vmName'), '-createrole'))]",
    "avereClusterRole": "[parameters('avereClusterRole')]",
    "useAvereBackedStorageAccount": "[parameters('useAvereBackedStorageAccount')]",
    "avereBackedStorageAccountName": "[parameters('avereBackedStorageAccountName')]",
    "avereClusterName": "[parameters('avereClusterName')]",
    "avereInstanceType": "[parameters('avereInstanceType')]",
    "avereCacheSizeGB": "[parameters('avereCacheSizeGB')]",
    "additionalVFXTParameters": "[concat(' --nodes ', parameters('avereNodeCount'), ' --debug')]",
    "controllerVMSize": "Standard_A1_v2",
    "publicIPAddressName": "[concat('publicip-',variables('controllerName'))]",
    "networkSecurityGroupName": "[concat('nsg-',variables('controllerName'))]",
    "vnetID": "[resourceId(variables('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/',variables('virtualNetworkSubnetName'))]",
    "vmName": "[concat('vm-',variables('controllerName'))]",
    "pipObject": {
      "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
    },
    "createNic?": true,
    "useExtension?": true,
    "storageAccountType": "Standard_LRS",
    "storageAccountKind": "StorageV2",
    "environmentVariables": "[concat(' RESOURCE_GROUP=', resourceGroup().name, ' LOCATION=', resourceGroup().location, ' NETWORK_RESOURCE_GROUP=', variables('virtualNetworkResourceGroup'), ' NETWORK=', variables('virtualNetworkName'),' SUBNET=', variables('virtualNetworkSubnetName'), ' AVERE_CLUSTER_ROLE=\"', variables('avereClusterRole'), '\" CREATE_CLOUD_BACKED_CLUSTER=', variables('useAvereBackedStorageAccount'), ' STORAGE_ACCOUNT=', variables('avereBackedStorageAccountName'), ' CACHE_SIZE=', variables('avereCacheSizeGB'), ' CLUSTER_NAME=', variables('avereClusterName'), ' INSTANCE_TYPE=', variables('avereInstanceType'), ' CONTROLLER_ADMIN_USER_NAME=', variables('controllerAdminUsername'), ' DEBUG=\"', variables('additionalVFXTParameters'), '\"')]",
    "sshKeyPath": "[concat('/home/',variables('controllerAdminUsername'),'/.ssh/authorized_keys')]",
    "controllerOSProfilePassword": {
      "computerName": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "adminPassword": "[variables('controllerPassword')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/41WbZOiRhD+zq/oQ6pON1F2U3X5sCk+cMjtWYdiAe4ll81NIYw6FRwsQN0klfz29IyIoKylVda8dT/9Ms0z3XmnzxnX52G+UpQOZHSTZgWESQIJ4zT/EUIeA31lBaQcaJalmZLTAvqvh4EqiumNSeDNbEMNsi1Vla/mKCC+bbmToW/8fH+vmN9mnk0+u2ObDEeeoa/SNdU1PA8813Fsj5jD8WhCZj5OJ+bYVp4//RqQ0cQPTMchgT2eOmZgG1oTR98tXgvG8wJ9VSzHnQ3JR9P6Yg9PGnqU0bCg/ShJt/E8jP6kMc63eUEzBS2OxqZzKbxmnK3DpBKUzjjuE/k0ctqdGCTpUlEWWx4VDJO0D1lBwr+3GSUiUhKzrNuDfxTAX5RuOYIa93K1X7GEwu/wDvoxnCHDH79AnEox8csTSjfwUK2PQFq3W07hB3jo9SoBtkBg7XjWX1LQ6hcj4IsV5ZW8+NFolYKK/tKoSLO/LlziKVbGLmRJOEe/w4VAFtEyvjxDz2mU8jhXm/Ciik4hLJicximnyr+1/KHmgi1F+kRySUHXmwQvpsqhjEzVLM/GayONm7ecmR/YngqGgRLHwlQvgo02oLWWDGittScVaZLTBsJ5CV1TxmDl2IHtJsZohD/AxN3wMIFdmDGR01zK5DSGPoP3uf7ds3135lk2efLc2VTvnK2X76/ZrOE4rmUGI3eid6rZzboTO/jqel/0znFys6Y/+4g6eqccb9Yzn23PPl4mQZKw9U7L3u1+BK5nPtnEtCx3NhEOnW3cjGSZ1meb+KNv6FFtfrt+6b+gOUSor27PjmTLqen7eBtDzExzfTOOPJ9gLQW/TdGZ5vI6inwnkjCioPb7iyxd9ynfsSzla8oLFfasWImTlPclQfOIqpAzHGCPvJFR2OaCM848gkssEJs1GLgtPDV//K+i5ketQeGPSxXegmjQkHwOJAed6PuCpuX2DWibDD/2A6Hhx55XiAfKfcanD+ubjKY+MroMgmMQ+vfBnSXcEMna5TTbIeEex+5Ld3D30nvRf/rwYVD79wZ3mv7yoG9UaAbeU2sWx09j9Hh6bm0d8nBJZebDOM5onj/Cwc5bkPUg4+16Q/D22kLE+8O+Ag+lVM0VrbvZx72aJH2VLUiT6gytuVYvFY7MZmjHWYtQyWHkHL19/22ASqNF5EB3hnYYWwQuuQz7iou9FsUrb55x9UFscbJJgehtc6PNekV4aKyatwnWeA1Fa6sW4QbvGFpj2Za7Btth3hrrusICG7l8VSu5eqmuQ8bPKlR0MiD7NhB9G2AfdIBraejKx7xsmBBdmhFlD4s0g5jOt8slfrUHgE7jw1BqNqteBwQ1QNnOwrHnUcumsbUhauCcyKrUOW3U5SQNHWwJVw6yZ9xUly8dCsvGDA1T4RVmUiRQ+R+xJBBFPQwAAA==\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n\n')]"
    },
    "controllerOSProfileSSHKey": {
      "computername": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/41WbZOiRhD+zq/oQ6pON1F2U3X5sCk+cMjtWYdiAe4ll81NIYw6FRwsQN0klfz29IyIoKylVda8dT/9Ms0z3XmnzxnX52G+UpQOZHSTZgWESQIJ4zT/EUIeA31lBaQcaJalmZLTAvqvh4EqiumNSeDNbEMNsi1Vla/mKCC+bbmToW/8fH+vmN9mnk0+u2ObDEeeoa/SNdU1PA8813Fsj5jD8WhCZj5OJ+bYVp4//RqQ0cQPTMchgT2eOmZgG1oTR98tXgvG8wJ9VSzHnQ3JR9P6Yg9PGnqU0bCg/ShJt/E8jP6kMc63eUEzBS2OxqZzKbxmnK3DpBKUzjjuE/k0ctqdGCTpUlEWWx4VDJO0D1lBwr+3GSUiUhKzrNuDfxTAX5RuOYIa93K1X7GEwu/wDvoxnCHDH79AnEox8csTSjfwUK2PQFq3W07hB3jo9SoBtkBg7XjWX1LQ6hcj4IsV5ZW8+NFolYKK/tKoSLO/LlziKVbGLmRJOEe/w4VAFtEyvjxDz2mU8jhXm/Ciik4hLJicximnyr+1/KHmgi1F+kRySUHXmwQvpsqhjEzVLM/GayONm7ecmR/YngqGgRLHwlQvgo02oLWWDGittScVaZLTBsJ5CV1TxmDl2IHtJsZohD/AxN3wMIFdmDGR01zK5DSGPoP3uf7ds3135lk2efLc2VTvnK2X76/ZrOE4rmUGI3eid6rZzboTO/jqel/0znFys6Y/+4g6eqccb9Yzn23PPl4mQZKw9U7L3u1+BK5nPtnEtCx3NhEOnW3cjGSZ1meb+KNv6FFtfrt+6b+gOUSor27PjmTLqen7eBtDzExzfTOOPJ9gLQW/TdGZ5vI6inwnkjCioPb7iyxd9ynfsSzla8oLFfasWImTlPclQfOIqpAzHGCPvJFR2OaCM848gkssEJs1GLgtPDV//K+i5ketQeGPSxXegmjQkHwOJAed6PuCpuX2DWibDD/2A6Hhx55XiAfKfcanD+ubjKY+MroMgmMQ+vfBnSXcEMna5TTbIeEex+5Ld3D30nvRf/rwYVD79wZ3mv7yoG9UaAbeU2sWx09j9Hh6bm0d8nBJZebDOM5onj/Cwc5bkPUg4+16Q/D22kLE+8O+Ag+lVM0VrbvZx72aJH2VLUiT6gytuVYvFY7MZmjHWYtQyWHkHL19/22ASqNF5EB3hnYYWwQuuQz7iou9FsUrb55x9UFscbJJgehtc6PNekV4aKyatwnWeA1Fa6sW4QbvGFpj2Za7Btth3hrrusICG7l8VSu5eqmuQ8bPKlR0MiD7NhB9G2AfdIBraejKx7xsmBBdmhFlD4s0g5jOt8slfrUHgE7jw1BqNqteBwQ1QNnOwrHnUcumsbUhauCcyKrUOW3U5SQNHWwJVw6yZ9xUly8dCsvGDA1T4RVmUiRQ+R+xJBBFPQwAAA==\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n\n')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[variables('sshKeyPath')]",
              "keyData": "[variables('controllerSSHKeyData')]"
            }
          ]
        }
      }
    },
    "controllerOSProfile": "[if(equals(variables('controllerAuthenticationType'),'password'),variables('controllerOSProfilePassword'),variables('controllerOSProfileSSHKey'))]",
    "controllerStorageProfile": {
      "imageReference": {
        "publisher": "microsoft-avere",
        "offer": "vfxt",
        "sku": "avere-vfxt-controller",
        "version": "latest"
      }
    },
    "vsip": "VSERVER_IPS=",
    "mip": "MGMT_IP="
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-7a86fa6c-a5c7-4f21-b9fa-efa3dcbfbb86",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualNetworkSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createNic?')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[if(variables('createVirtualNetwork'), variables('pipObject'), json('null'))]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "tags": {
        "averevfxt": "server"
      }, 
      "type": "Microsoft.Compute/virtualMachines",
      "identity": {
        "type": "SystemAssigned"
      },
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "avere-vfxt-controller",
        "publisher": "microsoft-avere",
        "product": "vfxt"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('controllerVMSize')]"
        },
        "osProfile": "[variables('controllerOSProfile')]",
        "storageProfile": "[variables('controllerStorageProfile')]",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-09-01",
      "name": "[variables('createRoleAssignmentId')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('avereCreateClusterRoleFullyQualifiedId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
        "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/')]"
      }
    },
    {
      "condition": "[variables('useExtension?')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/configureagent')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('createRoleAssignmentId'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('avereBackedStorageAccountName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(' ADMIN_PASSWORD=', variables('adminPassword'), variables('environmentVariables'), ' /bin/bash /opt/avere/installvfxt.sh')]"
        }
      }
    },
    {
      "condition": "[variables('useAvereBackedStorageAccount')]",
      "name": "[variables('avereBackedStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "[variables('storageAccountKind')]",
      "location": "[resourceGroup().location]"
    }
  ],
  "outputs": {
    "SSH_STRING": {
      "type": "string",
      "value": "[if(variables('createVirtualNetwork'), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).ipAddress), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))).ipConfigurations[0].properties.privateIPAddress))]"
    },
    "RESOURCE_GROUP": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "LOCATION": {
      "type": "string",
      "value": "[resourceGroup().location]"
    },
    "NETWORK_RESOURCE_GROUP": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroup')]"
    },
    "NETWORK": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "SUBNET": {
      "type": "string",
      "value": "[variables('virtualNetworkSubnetName')]"
    },
    "SUBNET_ID": {
      "type": "string",
      "value": "[variables('subnetId')]"
    },
    "VSERVER_IPS": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip')))),'\n'))]"
    },
    "MGMT_IP": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('mip')),length(variables('mip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('mip')),length(variables('mip')))),'\n'))]"
    }
  }
}
