{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "createVirtualNetwork": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the VNET based on the virtual network resource group, virtual network name, and subnet name provided, otherwise use the virtual network based on those names."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The resource group name for the VNET.  If createVirtualNetwork is set to true, the current resource group must be specified, otherwise the value should be blank."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name used for the virtual network.  If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for the virtual network subnet.  If createVirtualNetwork is set to true, you may reuse the unique name above."
      }
    },
    "vnetAddressSpacePrefix":{
      "type": "string",
      "metadata": {
        "description": "Virtual network address space prefix used when creating a virtual network with this deployment. E.g. 192.168.0.0/16"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "subnetAddressRangePrefix":{
      "type": "string",
      "metadata": {
        "description": "Subnet address range prefix used when creating a virtual network/subnet with this deployment. E.g. 192.168.0.0/24"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "useAvereBackedStorageAccount": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "If true, create the storage account and use that for the backing storage account.  If false, the minimal Avere vFXT cluster will be created."
      }
    },
    "avereBackedStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "A unique storage account to be created for backing the Avere vFXT.  If 'useAvereBackedStorageAccount' is set to false, this field is unused."
      }
    },
    "controllerName": {
      "type": "string",
      "metadata": {
        "description": "The unique name used for resource names associated with the controller"
      }
    },
    "controllerAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "The controller admin username."
      }
    },
    "controllerAuthenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "The controller may be configured with a password or public SSH key."
      }
    },
    "controllerPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'password', the admin password used for the controller."
      }
    },
    "controllerSSHKeyData": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "If controllerAuthenticationType is 'sshPublicKey', the controller public SSH key."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The admin password used for the Avere vFXT cluster."
      }
    },
    "avereCreateClusterRoleId": {
      "type": "string",
      "defaultValue": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "metadata": {
        "description": "The AAD role id used for creation of the vFXT cluster.  The default GUID is the Owner built-in role.  However, we recommend you create your own role as described in https://github.com/Azure/Avere/tree/master/src/vfxt#managed-identity-and-roles.  After role creation, obtain the ID by using the following az command: az role definition list --query '[*].{roleName:roleName, name:name}' -o table --name 'Avere Contributor'.  Microsoft employees use 'a7b1b19a-0e83-4fe5-935c-faaefbfd18c3'."
      }
    },
    "avereClusterRole": {
      "type": "string",
      "defaultValue": "avere-cluster",
      "metadata": {
        "description": "The AAD role used by the running vFXT cluster."
      }
    },
    "avereClusterName": {
      "type": "string",
      "defaultValue": "avere-cluster",
      "metadata": {
        "description": "The cluster name should be unique within the resource group."
      }
    },
    "avereInstanceType": {
      "type": "string",
      "defaultValue": "Standard_D16s_v3",
      "allowedValues": [
        "Standard_D16s_v3",
        "Standard_E32s_v3"
      ],
      "metadata": {
        "description": "The SKU for the Avere vFXT VM."
      }
    },
    "avereNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 12,
      "metadata": {
        "description": "The number of vFXT nodes in the Avere vFXT cluster"
      }
    },
    "avereCacheSizeGB": {
      "type": "int",
      "defaultValue": 1024,
      "allowedValues": [
        1024,
        4096
      ],
      "metadata": {
        "description": "The cache size in GB to use for each Avere vFXT VM."
      }
    }
  },
  "variables": {
    "controllerName": "[parameters('controllerName')]",
    "controllerAdminUsername": "[parameters('controllerAdminUsername')]",
    "controllerAuthenticationType": "[parameters('controllerAuthenticationType')]",
    "controllerPassword": "[parameters('controllerPassword')]",
    "controllerSSHKeyData": "[parameters('controllerSSHKeyData')]",
    "adminPassword": "[parameters('adminPassword')]",
    "nicName": "[concat('vmnic-',variables('controllerName'))]",
    "createVirtualNetwork": "[parameters('createVirtualNetwork')]",
    "virtualNetworkResourceGroup": "[if(variables('createVirtualNetwork'), resourceGroup().name, parameters('virtualNetworkResourceGroup'))]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "virtualNetworkSubnetName": "[parameters('virtualNetworkSubnetName')]",
    "addressPrefix": "[parameters('vnetAddressSpacePrefix')]",
    "subnetPrefix": "[parameters('subnetAddressRangePrefix')]",
    "avereCreateClusterRoleFullyQualifiedId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', parameters('avereCreateClusterRoleId'))]",
    "createRoleAssignmentId": "[guid(concat(variables('vmName'), '-createrole'))]",
    "userAdminClusterRoleFullyQualifiedId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
    "userAdminRoleAssignmentId": "[guid(concat(variables('vmName'), '-useradmin'))]",
    "createVNETRoleAssignmentId": "[guid(concat(variables('vmName'), '-createvnetrole'))]",
    "vnetAssignRoleName": "vnetAssignRole",
    "avereClusterRole": "[parameters('avereClusterRole')]",
    "useAvereBackedStorageAccount": "[parameters('useAvereBackedStorageAccount')]",
    "avereBackedStorageAccountName": "[parameters('avereBackedStorageAccountName')]",
    "avereClusterName": "[parameters('avereClusterName')]",
    "avereInstanceType": "[parameters('avereInstanceType')]",
    "avereCacheSizeGB": "[parameters('avereCacheSizeGB')]",
    "additionalVFXTParameters": "[concat(' --nodes ', parameters('avereNodeCount'), ' --debug')]",
    "controllerVMSize": "Standard_A1_v2",
    "publicIPAddressName": "[concat('publicip-',variables('controllerName'))]",
    "networkSecurityGroupName": "[concat('nsg-',variables('controllerName'))]",
    "vnetID": "[resourceId(variables('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/',variables('virtualNetworkSubnetName'))]",
    "vmName": "[concat('vm-',variables('controllerName'))]",
    "pipObject": {
      "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
    },
    "createNic?": true,
    "useExtension?": true,
    "storageAccountType": "Standard_LRS",
    "storageAccountKind": "StorageV2",
    "environmentVariables": "[concat(' RESOURCE_GROUP=', resourceGroup().name, ' LOCATION=', resourceGroup().location, ' NETWORK_RESOURCE_GROUP=', variables('virtualNetworkResourceGroup'), ' NETWORK=', variables('virtualNetworkName'),' SUBNET=', variables('virtualNetworkSubnetName'), ' AVERE_CLUSTER_ROLE=\"', variables('avereClusterRole'), '\" CREATE_CLOUD_BACKED_CLUSTER=', variables('useAvereBackedStorageAccount'), ' STORAGE_ACCOUNT=', variables('avereBackedStorageAccountName'), ' CACHE_SIZE=', variables('avereCacheSizeGB'), ' CLUSTER_NAME=', variables('avereClusterName'), ' INSTANCE_TYPE=', variables('avereInstanceType'), ' CONTROLLER_ADMIN_USER_NAME=', variables('controllerAdminUsername'), ' DEBUG=\"', variables('additionalVFXTParameters'), '\"')]",
    "sshKeyPath": "[concat('/home/',variables('controllerAdminUsername'),'/.ssh/authorized_keys')]",
    "controllerOSProfilePassword": {
      "computerName": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "adminPassword": "[variables('controllerPassword')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/81WW3PaRhR+1684kZUxjI3ByfSh9vBAbewwg8GDSdPWcTWLtEI7llaKdmWcUv57z64WSVxcd9LpRTwgnT3X79z24E17xnh7RkRoWQff/lj4g09EeiE8Bc/yJErmQLgPlJNZRMGLktwHmRGPAgkkzUCGFFAkJpzMaUy5hMEtMAEZ9Sh7ov6xFveZ2C+PokqD8DKWSgiJgIBxJkLqnwBM8STNszQRFJJgQxgtoGiQZEB8n0mWcBKBT2f5fM74HBjHo5goOvh5VpCEJFGkaSc6zD4XeYY+JXEaUc06+wpCJmmq+QPtWYlCwNB/P6HaME8kiDBZQJ4C+mB46ybWISl9ogAB5UptmgwzqizlqU8kBqyc+huZQ/UZTZNMAvoAEePU2KXPTAJ6RLMsySxBJbSeiz9qWb1fPk767ofxTd+9HEy67TCJadu5GI+mk/Fw2J+4vcubwcj9eIevo95N3/rx6qepOxxfu1eDYb/rbMq31wFan3qDqXvXR0WXd93Tdx1rcnvh9ke9H1DILqrJ1rTLwV1BNDViW1aQc6/AkHIfeRpNWFqAD0sx2xkVouucngPRTF3nnVUcBnAPtlNQbeh28aMyasMDnKsscdDc6jmA6fhyDC2TAVgwGQKK7Kt2rBKscSznjMo841gBvPUbzRJlNiBYG36plnphArbyHZxl4c4KZIIfpf8ru+TGzzyS3Y4m0OilKAxMVRivR7Gv6f6tMATd0tOfTMaTM5gR3+RtR/RUEwJWZNP45xSH1qpWFV5IvUc3JBE2jasKrqwPniy6TkOjcPRWNI3CiMaSxRRPsD2x6j14+zM4G3VcsPosCGhGuad4Gw5qazmleLNZr7KK1YbWXCKlXvB7slSgcNWb9oZneliUM8VZbriy0lOwiK7CSPdwiVAdjQVhUqPgosYSCS/JOY5Xk49FqAzdwxtoBVuRw8M5TrXSjogoTY2huh7Ew7zCEZwaLEo8nPVZa47x1JFQ6jdwqLDQwR9uR3+IWfD1fCVpSklm1oyzrGtd4WTwEu4Le1NvBZIBSmc14XQXsWphuSwtYSuAOjNyVZDV3GnQOU5ZsH9dUxr3ndb3D8vT4/erzyfN5ftV9W3v5vZ3IItHOFzGasU2nM5xW7MffT7Z/99unqN16ILIZ0JmSmJyN+1NpseTYX90Pf2A5ynuN4lcq8OttNjO8qDWq0WhdlRxlnwv5GZ/j6tnllHyuA2xrpTtrtxbU/uTYVYwdWM0iGl5NR8B6Cy0Wl9yhovMVvbOBqMrNQYvjLJd9F8sRSWu227tiL+xy/9ZBIpl4+op7eopvXffWZW7Mvuq7g04i/csKtv6M+TUHQHF1c2JPmFfYduyCBYUyQTvfGowxfNYVZO612xcgPSVpZ4Cs53BKd2E2sKFF9Fey4nc81DoFXT/MrzfVfDWsKpDU6CFU7UOv9mS34b/vhX73yfA3BX+hxkweG2lICaMl5gXQmos6Ou9bs1yVyLkxVooXN7YfYXNm+ubqTu4xUG9O+abxq2dhgPHiFmV2u2ZZJkrgnhZGGNSofwBxeQifowNAAA=\n    path: /opt/avere/enablecloudtrace.sh\n    permissions: \"0744\"\n\n')]"
    },
    "controllerOSProfileSSHKey": {
      "computername": "[variables('vmName')]",
      "adminUsername": "[variables('controllerAdminUsername')]",
      "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/avere/installvfxt.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAC/81WW3PaRhR+1684kZUxjI3ByfSh9vBAbewwg8GDSdPWcTWLtEI7llaKdmWcUv57z64WSVxcd9LpRTwgnT3X79z24E17xnh7RkRoWQff/lj4g09EeiE8Bc/yJErmQLgPlJNZRMGLktwHmRGPAgkkzUCGFFAkJpzMaUy5hMEtMAEZ9Sh7ov6xFveZ2C+PokqD8DKWSgiJgIBxJkLqnwBM8STNszQRFJJgQxgtoGiQZEB8n0mWcBKBT2f5fM74HBjHo5goOvh5VpCEJFGkaSc6zD4XeYY+JXEaUc06+wpCJmmq+QPtWYlCwNB/P6HaME8kiDBZQJ4C+mB46ybWISl9ogAB5UptmgwzqizlqU8kBqyc+huZQ/UZTZNMAvoAEePU2KXPTAJ6RLMsySxBJbSeiz9qWb1fPk767ofxTd+9HEy67TCJadu5GI+mk/Fw2J+4vcubwcj9eIevo95N3/rx6qepOxxfu1eDYb/rbMq31wFan3qDqXvXR0WXd93Tdx1rcnvh9ke9H1DILqrJ1rTLwV1BNDViW1aQc6/AkHIfeRpNWFqAD0sx2xkVouucngPRTF3nnVUcBnAPtlNQbeh28aMyasMDnKsscdDc6jmA6fhyDC2TAVgwGQKK7Kt2rBKscSznjMo841gBvPUbzRJlNiBYG36plnphArbyHZxl4c4KZIIfpf8ru+TGzzyS3Y4m0OilKAxMVRivR7Gv6f6tMATd0tOfTMaTM5gR3+RtR/RUEwJWZNP45xSH1qpWFV5IvUc3JBE2jasKrqwPniy6TkOjcPRWNI3CiMaSxRRPsD2x6j14+zM4G3VcsPosCGhGuad4Gw5qazmleLNZr7KK1YbWXCKlXvB7slSgcNWb9oZneliUM8VZbriy0lOwiK7CSPdwiVAdjQVhUqPgosYSCS/JOY5Xk49FqAzdwxtoBVuRw8M5TrXSjogoTY2huh7Ew7zCEZwaLEo8nPVZa47x1JFQ6jdwqLDQwR9uR3+IWfD1fCVpSklm1oyzrGtd4WTwEu4Le1NvBZIBSmc14XQXsWphuSwtYSuAOjNyVZDV3GnQOU5ZsH9dUxr3ndb3D8vT4/erzyfN5ftV9W3v5vZ3IItHOFzGasU2nM5xW7MffT7Z/99unqN16ILIZ0JmSmJyN+1NpseTYX90Pf2A5ynuN4lcq8OttNjO8qDWq0WhdlRxlnwv5GZ/j6tnllHyuA2xrpTtrtxbU/uTYVYwdWM0iGl5NR8B6Cy0Wl9yhovMVvbOBqMrNQYvjLJd9F8sRSWu227tiL+xy/9ZBIpl4+op7eopvXffWZW7Mvuq7g04i/csKtv6M+TUHQHF1c2JPmFfYduyCBYUyQTvfGowxfNYVZO612xcgPSVpZ4Cs53BKd2E2sKFF9Fey4nc81DoFXT/MrzfVfDWsKpDU6CFU7UOv9mS34b/vhX73yfA3BX+hxkweG2lICaMl5gXQmos6Ou9bs1yVyLkxVooXN7YfYXNm+ubqTu4xUG9O+abxq2dhgPHiFmV2u2ZZJkrgnhZGGNSofwBxeQifowNAAA=\n    path: /opt/avere/enablecloudtrace.sh\n    permissions: \"0744\"\n\n')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[variables('sshKeyPath')]",
              "keyData": "[variables('controllerSSHKeyData')]"
            }
          ]
        }
      }
    },
    "controllerOSProfile": "[if(equals(variables('controllerAuthenticationType'),'password'),variables('controllerOSProfilePassword'),variables('controllerOSProfileSSHKey'))]",
    "controllerStorageProfile": {
      "imageReference": {
        "publisher": "microsoft-avere",
        "offer": "vfxt",
        "sku": "avere-vfxt-controller",
        "version": "latest"
      }
    },
    "vsip": "VSERVER_IPS=",
    "mip": "MGMT_IP="
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-7a86fa6c-a5c7-4f21-b9fa-efa3dcbfbb86",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createVirtualNetwork')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('virtualNetworkSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[variables('createNic?')]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": "[if(variables('createVirtualNetwork'), variables('pipObject'), json('null'))]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "tags": {
        "averevfxt": "server"
      }, 
      "type": "Microsoft.Compute/virtualMachines",
      "identity": {
        "type": "SystemAssigned"
      },
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "avere-vfxt-controller",
        "publisher": "microsoft-avere",
        "product": "vfxt"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('controllerVMSize')]"
        },
        "osProfile": "[variables('controllerOSProfile')]",
        "storageProfile": "[variables('controllerStorageProfile')]",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-09-01",
      "name": "[variables('createRoleAssignmentId')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('avereCreateClusterRoleFullyQualifiedId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "2017-09-01",
      "name": "[variables('userAdminRoleAssignmentId')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[concat('Microsoft.Authorization/roleAssignments/', variables('createRoleAssignmentId'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('userAdminClusterRoleFullyQualifiedId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "condition": "[not(variables('createVirtualNetwork'))]",
      "apiVersion": "2018-05-01",
      "name": "[variables('vnetAssignRoleName')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "resourceGroup": "[variables('virtualNetworkResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[variables('createVNETRoleAssignmentId')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2017-09-01",
              "properties": {
                "roleDefinitionId": "[variables('avereCreateClusterRoleFullyQualifiedId')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines/', variables('vmName')), '2017-12-01', 'Full').identity.principalId]",
                "scope": "[concat(subscription().id, '/resourceGroups/', parameters('virtualNetworkResourceGroup'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[variables('useExtension?')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/configureagent')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('userAdminRoleAssignmentId'))]",
        "[concat('Microsoft.Resources/deployments/', variables('vnetAssignRoleName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('avereBackedStorageAccountName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(' ADMIN_PASSWORD=', variables('adminPassword'), variables('environmentVariables'), ' /bin/bash /opt/avere/installvfxt.sh')]"
        }
      }
    },
    {
      "condition": "[variables('useAvereBackedStorageAccount')]",
      "name": "[variables('avereBackedStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "[variables('storageAccountKind')]",
      "location": "[resourceGroup().location]"
    }
  ],
  "outputs": {
    "ssh_string": {
      "type": "string",
      "value": "[if(variables('createVirtualNetwork'), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).ipAddress), concat(variables('controllerAdminUsername'), '@', reference(resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))).ipConfigurations[0].properties.privateIPAddress))]"
    },
    "resource_group": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[resourceGroup().location]"
    },
    "network_resource_group": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroup')]"
    },
    "network": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "subnet": {
      "type": "string",
      "value": "[variables('virtualNetworkSubnetName')]"
    },
    "subnet_id": {
      "type": "string",
      "value": "[variables('subnetId')]"
    },
    "vserver_ips": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('vsip')),length(variables('vsip')))),'\n'))]"
    },
    "mgmt_ip": {
      "type": "string",
      "value": "[substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('mip')),length(variables('mip'))),indexOf(substring(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,add(indexOf(reference(concat('Microsoft.Compute/virtualMachines/',variables('vmName'),'/extensions/configureagent')).instanceView.statuses[0].message,variables('mip')),length(variables('mip')))),'\n'))]"
    }
  }
}
